<?xml version="1.0" encoding="utf-8"?>
<unattend
	xmlns="urn:schemas-microsoft-com:unattend"
	xmlns:wcm="http://schemas.microsoft.com/WMIConfig/2002/State">
	<settings pass="offlineServicing"></settings>
	<settings pass="windowsPE">
		<component name="Microsoft-Windows-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<UserData>
				<AcceptEula>true</AcceptEula>
				<ProductKey>
					<Key>00000-00000-00000-00000-00000</Key>
					<WillShowUI>Always</WillShowUI>
					<!-- This ensures the UI will show to select the edition of Windows -->
				</ProductKey>
			</UserData>
			<RunSynchronous>
				<!--Bypass Windows 11 System Requirements-->
				<RunSynchronousCommand wcm:action="add">
					<Order>1</Order>
					<Path>reg.exe add "HKLM\SYSTEM\Setup\LabConfig" /v BypassTPMCheck /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>2</Order>
					<Path>reg.exe add "HKLM\SYSTEM\Setup\LabConfig" /v BypassSecureBootCheck /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>3</Order>
					<Path>reg.exe add "HKLM\SYSTEM\Setup\LabConfig" /v BypassStorageCheck /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>4</Order>
					<Path>reg.exe add "HKLM\SYSTEM\Setup\LabConfig" /v BypassCPUCheck /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>5</Order>
					<Path>reg.exe add "HKLM\SYSTEM\Setup\LabConfig" /v BypassRAMCheck /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>6</Order>
					<Path>reg.exe add "HKLM\SYSTEM\Setup\LabConfig" /v BypassDiskCheck /t REG_DWORD /d 1 /f</Path>
				</RunSynchronousCommand>
			</RunSynchronous>
		</component>
	</settings>
	<settings pass="generalize"></settings>
	<settings pass="specialize">
		<component name="Microsoft-Windows-Deployment" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<RunSynchronous>
				<RunSynchronousCommand wcm:action="add">
					<Order>1</Order>
					<Description>Extracts and Executes Scripts in this XML File</Description>
					<Path>powershell.exe -NoProfile -Command "$xml = [xml]::new(); $xml.Load('C:\Windows\Panther\unattend.xml'); $sb = [scriptblock]::Create( $xml.unattend.Extensions.ExtractScript ); Invoke-Command -ScriptBlock $sb -ArgumentList $xml;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>2</Order>
					<Description>Loads the Default User Registry Hive so Changes Can be Made to It</Description>
					<Path>reg.exe load "HKU\DefaultUser" "C:\Users\Default\NTUSER.DAT"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>3</Order>
					<Description>Executes the remove-packages Powershell Script</Description>
					<Path>powershell.exe -NoProfile -Command "Get-Content -LiteralPath '%TEMP%\remove-packages.ps1' -Raw | Invoke-Expression;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>4</Order>
					<Description>Executes the remove-caps Powershell Script</Description>
					<Path>powershell.exe -NoProfile -Command "Get-Content -LiteralPath '%TEMP%\remove-caps.ps1' -Raw | Invoke-Expression;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>5</Order>
					<Description>Executes the remove-features Powershell Script</Description>
					<Path>powershell.exe -NoProfile -Command "Get-Content -LiteralPath '%TEMP%\remove-features.ps1' -Raw | Invoke-Expression;"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>6</Order>
					<Description>Run Chris Titus WinUtil Tweaks</Description>
					<Path>cmd.exe /c "powershell.exe -NoProfile -ExecutionPolicy Bypass -Command "Get-Content -LiteralPath 'C:\Windows\Setup\Scripts\wintweaks.ps1' -Raw | Invoke-Expression;" &gt;&gt;"C:\Windows\Setup\Scripts\wintweaks.log" 2&gt;&amp;1"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>7</Order>
					<Description>Executes the HKLM Registry Entries Script</Description>
					<Path>cmd.exe /c "C:\Windows\Setup\Scripts\localmachine.cmd &gt;&gt;"C:\Windows\Setup\Scripts\localmachine.log" 2&gt;&amp;1"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>8</Order>
					<Description>Registry Entry to Execute the HKCU Registry Entry Script the First Time a New User Logs In</Description>
					<Path>reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Runonce" /v "currentuser" /t REG_SZ /d "C:\Windows\Setup\Scripts\currentuser.cmd" /f</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>9</Order>
					<Description>Registry Entry to Execute the HKU\DefaultUser Registry Entries Script</Description>
					<Path>cmd.exe /c "C:\Windows\Setup\Scripts\defaultuser.cmd &gt;&gt;"C:\Windows\Setup\Scripts\defaultuser.log" 2&gt;&amp;1"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>10</Order>
					<Description>Executes the EdgeRemoval batch file</Description>
					<Path>cmd.exe /c "C:\Windows\Setup\Scripts\edgeremoval.bat &gt;&gt;"C:\Windows\Setup\Scripts\edgeremoval.log" 2&gt;&amp;1"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
    			<Order>11</Order>
    			<Description>Delete WFS.exe from System32</Description>
    			<Path>cmd.exe /c del "C:\Windows\System32\WFS.exe"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
    			<Order>12</Order>
    			<Description>Delete SnippingTool.exe from System32</Description>
    			<Path>cmd.exe /c del "C:\Windows\System32\SnippingTool.exe"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
    			<Order>13</Order>
    			<Description>Delete mstsc.exe from System32</Description>
    			<Path>cmd.exe /c del "C:\Windows\System32\mstsc.exe"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
    			<Order>14</Order>
    			<Description>Delete wordpad.exe</Description>
    			<Path>cmd.exe /c rmdir /s /q "C:\Program Files\Windows NT\Accessories"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
    			<Order>15</Order>
    			<Description>Delete Windows Fax and Scan shortcut</Description>
    			<Path>cmd.exe /c del "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Windows Fax and Scan.lnk"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
    			<Order>16</Order>
    			<Description>Delete Remote Desktop Connection shortcut</Description>
    			<Path>cmd.exe /c del "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Remote Desktop Connection.lnk"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
    			<Order>17</Order>
    			<Description>Delete Snipping Tool shortcut</Description>
    			<Path>cmd.exe /c del "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Snipping Tool.lnk"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
    			<Order>18</Order>
    			<Description>Delete Wordpad shortcut</Description>
    			<Path>cmd.exe /c del "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\Wordpad.lnk"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
    			<Order>19</Order>
    			<Description>Delete charmap.exe shortcut</Description>
    			<Path>cmd.exe /c rmdir /s /q "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Accessories\System Tools"</Path>
				</RunSynchronousCommand>
        <RunSynchronousCommand wcm:action="add">
					<Order>20</Order>
					<Description>Download Remove-NoTerm.exe</Description>
					<Path>powershell.exe -NoProfile -Command "Invoke-WebRequest -Uri 'https://github.com/ShadowWhisperer/Remove-MS-Edge/blob/main/Remove-NoTerm.exe?raw=true' -OutFile '%TEMP%\Remove-NoTerm.exe'"</Path>
				</RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>21</Order>
					<Description>Install Remove-NoTerm</Description>
					<Path>cmd.exe /c "%TEMP%\Remove-NoTerm.exe /silent /install"</Path>
        </RunSynchronousCommand>
				<RunSynchronousCommand wcm:action="add">
					<Order>22</Order>
					<Description>Unloads the Default User Registry Hive</Description>
					<Path>reg.exe unload "HKU\DefaultUser"</Path>
				</RunSynchronousCommand>
			</RunSynchronous>
		</component>
	</settings>
	<settings pass="auditSystem"></settings>
	<settings pass="auditUser"></settings>
	<settings pass="oobeSystem">
		<component name="Microsoft-Windows-Shell-Setup" processorArchitecture="amd64" publicKeyToken="31bf3856ad364e35" language="neutral" versionScope="nonSxS">
			<OOBE>
				<HideEULAPage>true</HideEULAPage>
				<HideOEMRegistrationScreen>true</HideOEMRegistrationScreen>
				<HideOnlineAccountScreens>true</HideOnlineAccountScreens>
				<NetworkLocation>Work</NetworkLocation>
				<ProtectYourPC>3</ProtectYourPC>
			</OOBE>
			<FirstLogonCommands>
        <SynchronousCommand wcm:action="add">
          <Order>1</Order>
          <CommandLine>cmd /c copy C:\Windows\Setup\Scripts\Browser_Downloader.bat %UserProfile%\Desktop\Browser_Downloader.bat</CommandLine>
          <Description>Create Browser_Downloader.bat on Desktop</Description>
        </SynchronousCommand>
      </FirstLogonCommands>
		</component>
	</settings>
  <Extensions>
	<ExtractScript>
    param(
      [xml] $Document
    );

    $scriptsDir = 'C:\Windows\Setup\Scripts\';
    foreach( $file in $Document.unattend.Extensions.File ) {
    $path = [System.Environment]::ExpandEnvironmentVariables(
        $file.GetAttribute( 'path' )
    );
    if( $path.StartsWith( $scriptsDir ) ) {
        mkdir -Path $scriptsDir -ErrorAction 'SilentlyContinue';
    }
    $encoding = switch( [System.IO.Path]::GetExtension( $path ) ) {
        { $_ -in '.ps1', '.xml' } { [System.Text.Encoding]::UTF8; }
        { $_ -in '.reg', '.vbs', '.js' } { [System.Text.UnicodeEncoding]::new( $false, $true ); }
        default { [System.Text.Encoding]::Default; }
    };
    [System.IO.File]::WriteAllBytes( $path, ( $encoding.GetPreamble() + $encoding.GetBytes( $file.InnerText.Trim() ) ) );
    }
		</ExtractScript>
		<!--Removes Preinstalled Bloatware Apps-->
		<File path="%TEMP%\remove-packages.ps1">
  Get-AppxProvisionedPackage -Online |
  Where-Object -Property 'DisplayName' -In -Value @(
  'Microsoft.Microsoft3DViewer';
  'Microsoft.BingSearch';
  'Microsoft.WindowsCamera';
  'Clipchamp.Clipchamp';
  'Microsoft.WindowsAlarms';
  'Microsoft.549981C3F5F10';
  'Microsoft.Windows.DevHome';
  'MicrosoftCorporationII.MicrosoftFamily';
  'Microsoft.WindowsFeedbackHub';
  'Microsoft.GetHelp';
  'microsoft.windowscommunicationsapps';
  'Microsoft.WindowsMaps';
  'Microsoft.BingNews';
  'Microsoft.MicrosoftOfficeHub';
  'Microsoft.Office.OneNote';
  'Microsoft.OutlookForWindows';
  'Microsoft.People';
  'Microsoft.PowerAutomateDesktop';
  'MicrosoftCorporationII.QuickAssist';
  'Microsoft.SkypeApp';
  'Microsoft.MicrosoftSolitaireCollection';
  'Microsoft.MicrosoftStickyNotes';
  'MSTeams';
  'Microsoft.MicrosoftEdge';
  'Microsoft.MicrosoftEdge.Stable';
  'Microsoft.MicrosoftEdge_8wekyb3d8bbwe';
  'Microsoft.MicrosoftEdgeDevToolsClient_8wekyb3d8bbwe';
  'Microsoft.MicrosoftEdgeDevToolsClient_1000.19041.1023.0_neutral_neutral_8wekyb3d8bbwe';
  'Microsoft.MicrosoftEdge_44.19041.1266.0_neutral__8wekyb3d8bbwe';
  'Microsoft.MSPaint';
  'Microsoft.Getstarted';
  'Microsoft.MicrosoftEdgeDevToolsClient';
  'Microsoft.Todos';
  'Microsoft.WindowsSoundRecorder';
  'Microsoft.BingWeather';
  'Microsoft.WindowsTerminal';
  'Microsoft.Xbox.TCUI';
  'Microsoft.XboxApp';
  'Microsoft.XboxGameOverlay';
  'Microsoft.XboxGamingOverlay';
  'Microsoft.XboxIdentityProvider';
  'Microsoft.XboxSpeechToTextOverlay';
  'Microsoft.GamingApp';
  'Microsoft.YourPhone';
  'Microsoft.OneDrive';
  'Microsoft.549981C3F5F10';
  'Microsoft.MixedReality.Portal';
  'Microsoft.Windows.Ai.Copilot.Provider';
  'Microsoft.WindowsMeetNow';
  ) | Remove-AppxProvisionedPackage -AllUsers -Online *&gt;&amp;1 &gt;&gt; "$env:TEMP\remove-packages.log";
		</File>
		<!--Removes Legacy Apps-->
		<File path="%TEMP%\remove-caps.ps1">
  Get-WindowsCapability -Online |
  Where-Object -FilterScript {
  ($_.Name -split '~')[0] -in @(
    'Browser.InternetExplorer';
    'MathRecognizer';
	'Microsoft.Windows.WordPad';
    'OpenSSH.Client';
    'Microsoft.Windows.PowerShell.ISE';
    'App.Support.QuickAssist';
    'App.StepsRecorder'
	'Microsoft.Windows.Photos';
  );
  } | Remove-WindowsCapability -Online *&gt;&amp;1 &gt;&gt; "$env:TEMP\remove-caps.log";
		</File>
		<!--Local Machine Registry Entries - This Sets Features for the Local Machine-->
		<File path="C:\Windows\Setup\Scripts\localmachine.cmd">
:: Bypasses Microsoft Account Creation
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE" /v BypassNRO /t REG_DWORD /d 1 /f

:: Disable Windows Spotlight and set the normal Windows Picture as the desktop background
:: Disable Windows Spotlight on the lock screen
reg.exe add "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v DisableWindowsSpotlightOnLockScreen /t REG_DWORD /d 1 /f
:: Disable Windows Spotlight suggestions, tips, tricks, and more on the lock screen
reg.exe add "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v DisableWindowsConsumerFeatures /t REG_DWORD /d 1 /f
:: Disable Windows Spotlight on Settings
reg.exe add "HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v DisableWindowsSpotlightActiveUser /t REG_DWORD /d 1 /f
:: Set desktop background to a normal Windows picture
reg.exe add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v Wallpaper /t REG_SZ /d "C:\Windows\Web\Wallpaper\Windows\img0.jpg" /f
:: Ensure the wallpaper style is set to fill (2 is for fill, 10 is for fit)
reg.exe add "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v WallpaperStyle /t REG_SZ /d "2" /f

:: Prevents Dev Home Installation
reg.exe delete "HKLM\SOFTWARE\Microsoft\WindowsUpdate\Orchestrator\UScheduler_Oobe\DevHomeUpdate" /f

:: Prevents New Outlook for Windows Installation
reg.exe delete "HKLM\SOFTWARE\Microsoft\WindowsUpdate\Orchestrator\UScheduler_Oobe\OutlookUpdate" /f

:: Prevents Chat Auto Installation and Removes Chat Icon
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Communications" /v ConfigureChatAutoInstall /t REG_DWORD /d 0 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windows Chat" /v "ChatIcon" /t REG_DWORD /d 3 /f

:: Enable Long File Paths with Up to 32,767 Characters
reg.exe add "HKLM\SYSTEM\CurrentControlSet\Control\FileSystem" /v LongPathsEnabled /t REG_DWORD /d 1 /f

:: Disables News and Interests
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Dsh" /v AllowNewsAndInterests /t REG_DWORD /d 0 /f

:: Disables Windows Consumer Features Like App Promotions etc.
reg.exe add "HKLM\Software\Policies\Microsoft\Windows\CloudContent" /v "DisableWindowsConsumerFeatures" /t REG_DWORD /d 0 /f

:: Disables Bitlocker Auto Encryption on Windows 11 24H2 and Onwards
reg.exe add "HKLM\SYSTEM\CurrentControlSet\Control\BitLocker" /v "PreventDeviceEncryption" /t REG_DWORD /d 1 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\EnhancedStorageDevices" /v TCGSecurityActivationDisabled /t REG_DWORD /d 1 /f

:: Sets Windows Update to Only Install Security Updates and Delay Other Updates for 1 Year
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate\AU" /v AUOptions /t REG_DWORD /d 3 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" /v DeferFeatureUpdates /t REG_DWORD /d 1 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" /v DeferFeatureUpdatesPeriodInDays /t REG_DWORD /d 365 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" /v DeferQualityUpdates /t REG_DWORD /d 1 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" /v DeferQualityUpdatesPeriodInDays /t REG_DWORD /d 365 /f

:: Disables Cortana
reg.exe add "HKLM\Software\Policies\Microsoft\Windows\Windows Search" /v AllowCortana /t REG_DWORD /d 0 /f

:: Disables Activity History
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v EnableActivityFeed /t REG_DWORD /d 0 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v PublishUserActivities /t REG_DWORD /d 0 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\System" /v UploadUserActivities /t REG_DWORD /d 0 /f

:: Disables Hibernation
reg.exe add "HKLM\System\CurrentControlSet\Control\Session Manager\Power" /v HibernateEnabled /t REG_DWORD /d 0 /f
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FlyoutMenuSettings" /v ShowHibernateOption /t REG_DWORD /d 0 /f

:: Disables Location Tracking
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore\location" /v Value /t REG_SZ /d Deny /f
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Sensor\Overrides\{BFA794E4-F964-4FDB-90F6-51056BFE4B44}" /v SensorPermissionState /t REG_DWORD /d 0 /f
reg.exe add "HKLM\SYSTEM\CurrentControlSet\Services\lfsvc\Service\Configuration" /v Status /t REG_DWORD /d 0 /f
reg.exe add "HKLM\SYSTEM\Maps" /v AutoUpdateEnabled /t REG_DWORD /d 0 /f

:: Disables Telemetry
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\DataCollection" /v AllowTelemetry /t REG_DWORD /d 0 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\DataCollection" /v AllowTelemetry /t REG_DWORD /d 0 /f

:: Disables Windows Ink Workspace
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\WindowsInkWorkspace" /v AllowWindowsInkWorkspace /t REG_DWORD /d 0 /f

:: Disables the Advertising ID for All Users
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\AdvertisingInfo" /v DisabledByGroupPolicy /t REG_DWORD /d 1 /f

:: Disables Windows Error Reporting
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\Windows Error Reporting" /v Disabled /t REG_DWORD /d 1 /f

:: Disables Delivery Optimization
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization\Config" /v DODownloadMode /t REG_DWORD /d 0 /f

:: Disables Remote Assistance
reg.exe add "HKLM\SYSTEM\CurrentControlSet\Control\Remote Assistance" /v fAllowToGetHelp /t REG_DWORD /d 0 /f

:: Search Windows Update for Drivers First
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\DriverSearching" /v SearchOrderConfig /t REG_DWORD /d 1 /f

:: Gives Multimedia Applications like Games and Video Editing a Higher Priority
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" /v SystemResponsiveness /t REG_DWORD /d 0 /f
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile" /v NetworkThrottlingIndex /t REG_DWORD /d 4294967295 /f

:: Controls whether the memory page file is cleared at shutdown. Value 0 means it will not be cleared, speeding up shutdown. 
reg.exe add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v ClearPageFileAtShutdown /t REG_DWORD /d 0 /f

:: Enables NDU (Network Diagnostic Usage) Service on Startup
reg.exe add "HKLM\SYSTEM\ControlSet001\Services\Ndu" /v Start /t REG_DWORD /d 2 /f

:: Increases IRP stack size to 30 for the LanmanServer service to Improve Network Performance and Stability
reg.exe add "HKLM\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters" /v IRPStackSize /t REG_DWORD /d 30 /f

:: Hides the Meet Now Button on the Taskbar
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v HideSCAMeetNow /t REG_DWORD /d 1 /f

:: Gives Graphics Cards a Higher Priority for Gaming
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" /v "GPU Priority" /t REG_DWORD /d 8 /f

:: Gives the CPU a Higher Priority for Gaming
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" /v Priority /t REG_DWORD /d 6 /f

:: Gives Games a higher priority in the system's scheduling
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Multimedia\SystemProfile\Tasks\Games" /v "Scheduling Category" /t REG_SZ /d "High" /f

:: Set Registry Keys to Disable Wifi-Sense
reg.exe add "HKLM\Software\Microsoft\PolicyManager\default\WiFi\AllowWiFiHotSpotReporting" /v Value /t REG_DWORD /d 0 /f
reg.exe add "HKLM\Software\Microsoft\PolicyManager\default\WiFi\AllowAutoConnectToWiFiSenseHotspots" /v Value /t REG_DWORD /d 0 /f

:: Fix Managed by your organization in Edge
reg.exe delete "HKLM\SOFTWARE\Policies\Microsoft\Edge" /f

:: Deletes Microsoft Edge Registry Entries
reg.exe delete "HKLM\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\Microsoft Edge" /f
reg.exe delete "HKLM\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\Microsoft Edge Update" /f
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\Applications\Microsoft.MicrosoftEdge.Stable_124.0.2478.105_neutral__8wekyb3d8bbwe" /f
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\InboxApplications\Microsoft.MicrosoftEdge_44.19041.1266.0_neutral__8wekyb3d8bbwe" /f
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\InboxApplications\Microsoft.MicrosoftEdgeDevToolsClient_10.0.19041.1023_neutral__8wekyb3d8bbwe" /f
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\S-1-5-21-2466455740-832722602-188176761-1001\Microsoft.MicrosoftEdge.Stable_124.0.2478.105_neutral__8wekyb3d8bbwe" /f
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\S-1-5-21-2466455740-832722602-188176761-1001\Microsoft.MicrosoftEdge_44.19041.1266.0_neutral__8wekyb3d8bbwe" /f
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore\S-1-5-21-2466455740-832722602-188176761-1001\Microsoft.MicrosoftEdgeDevToolsClient_10.0.19041.1023_neutral__8wekyb3d8bbwe" /f

:: Disables Storage Sense
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\StorageSense\Parameters\StoragePolicy" /v 01 /t REG_DWORD /d 0 /f

:: Disable Xbox GameDVR
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\GameDVR" /v AllowGameDVR /t REG_DWORD /d 0 /f

:: Disable Tablet Mode
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\ImmersiveShell" /v TabletMode /t REG_DWORD /d 0 /f

:: Always go to desktop mode on sign-in
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\ImmersiveShell" /v SignInMode /t REG_DWORD /d 1 /f

:: Disable "Use my sign-in info to automatically finish setting up my device after an update or restart"
reg.exe add "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System" /v DisableAutomaticRestartSignOn /t REG_DWORD /d 1 /f

:: Disables OneDrive Automatic Backups of Important Folders (Documents, Pictures etc.)
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\OneDrive" /v KFMBlockOptIn /t REG_DWORD /d 1 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\OneDrive" /v DisableFileSyncNGSC /t REG_DWORD /d 1 /f

:: Disables the "Push To Install" feature in Windows
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\PushToInstall" /v "DisablePushToInstall" /t REG_DWORD /d 1 /f

:: Disables Consumer Account State Content
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v "DisableConsumerAccountStateContent" /t REG_DWORD /d 1 /f

:: Disables Cloud Optimized Content
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v "DisableCloudOptimizedContent" /t REG_DWORD /d 1 /f

:: DELETES SCHEDULED TASKS REGISTRY KEYS
:: Deleting Application Compatibility Appraiser
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks\{0600DD45-FAF2-4131-A006-0B17509B9F78}" /f
:: Deleting Customer Experience Improvement Program
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks\{4738DE7A-BCC1-4E2D-B1B0-CADB044BFA81}" /f
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks\{6FAC31FA-4A85-4E64-BFD5-2154FF4594B3}" /f
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks\{FC931F16-B50A-472E-B061-B6F79A71EF59}" /f
:: Deleting Program Data Updater
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks\{0671EB05-7D95-4153-A32B-1426B9FE61DB}" /f
:: Deleting autochk proxy
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks\{87BF85F4-2CE1-4160-96EA-52F554AA28A2}" /f
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks\{8A9C643C-3D74-4099-B6BD-9C6D170898B1}" /f
:: Deleting QueueReporting
reg.exe delete "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tasks\{E3176A65-4E44-4ED3-AA73-3283660ACB9C}" /f

:: Block Automatic Upgrade from Windows 10 22H2 to Windows 11 Although Manual Upgrade is Still Allowed - Credit CyberCPU Tech
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" /v "TargetReleaseVersion" /t REG_DWORD /d 1 /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" /v "TargetReleaseVersionInfo" /t REG_SZ /d "22H2" /f
reg.exe add "HKLM\SOFTWARE\Policies\Microsoft\Windows\WindowsUpdate" /v "ProductVersion" /t REG_SZ /d "Windows 10" /f
		</File>
		<!--Powershell Script to Run Various Tweaks, Most of These are from the Chris Titus Tech Windows Utility (Credit:https://christitus.com/windows-tool/)-->
		<File path="C:\Windows\Setup\Scripts\wintweaks.ps1">
			<![CDATA[
# Allow Execution of PowerShell Script Files
Set-ExecutionPolicy -Scope 'LocalMachine' -ExecutionPolicy 'RemoteSigned' -Force

# Configure Maximum Password Age in Windows
net.exe accounts /maxpwage:UNLIMITED

# Groups or splits svchost.exe processes based on the amount of physical memory in the system to optimize performance
$ram = (Get-CimInstance -ClassName Win32_PhysicalMemory | Measure-Object -Property Capacity -Sum).Sum / 1kb
Set-ItemProperty -Path "HKLM:\SYSTEM\CurrentControlSet\Control" -Name "SvcHostSplitThresholdInKB" -Type DWord -Value $ram -Force

$autoLoggerDir = "$env:PROGRAMDATA\Microsoft\Diagnosis\ETLLogs\AutoLogger"
If (Test-Path "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl") {
    Remove-Item "$autoLoggerDir\AutoLogger-Diagtrack-Listener.etl"
}
$icaclsCommand = "icacls `"$autoLoggerDir`" /deny SYSTEM:`"(OI)(CI)F`""
Invoke-Expression $icaclsCommand | Out-Null

# Disable Defender Auto Sample Submission
Set-MpPreference -SubmitSamplesConsent 2 -ErrorAction Continue | Out-Null

# Removes Microsoft Edge
foreach ($line in $lines) {
    if ($line -like '*Architecture : *') {
        $architecture = $line -replace 'Architecture : ',''
        # If the architecture is x64, replace it with amd64
        if ($architecture -eq 'x64') {
            $architecture = 'amd64'
        }
        Write-Host "Architecture: $architecture"
        break
    }
}

if (-not $architecture) {
    Write-Host "Architecture information not found."
}
Remove-Item -Path "C:\Program Files (x86)\Microsoft\Edge" -Recurse -Force -ErrorAction Continue
Remove-Item -Path "C:\Program Files (x86)\Microsoft\EdgeWebView" -Recurse -Force -ErrorAction Continue
Remove-Item -Path "C:\Program Files (x86)\Microsoft\EdgeUpdate" -Recurse -Force -ErrorAction Continue
Remove-Item -Path "C:\Program Files (x86)\Microsoft\EdgeCore" -Recurse -Force -ErrorAction Continue
Remove-Item -Path "C:\Users\Public\Desktop\Microsoft Edge.lnk" -Recurse -Force -ErrorAction Continue
Remove-Item -Path "C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Microsoft Edge.lnk" -Recurse -Force -ErrorAction Continue
Remove-Item -Path "C:\Windows\SystemApps\Microsoft.MicrosoftEdge_8wekyb3d8bbwe" -Recurse -Force -ErrorAction Continue
Remove-Item -Path "C:\Windows\SystemApps\Microsoft.MicrosoftEdgeDevToolsClient_8wekyb3d8bbwe" -Recurse -Force -ErrorAction Continue
if ($architecture -eq 'amd64') {
    $folderPath = Get-ChildItem -Path "C:\Windows\WinSxS" -Filter "amd64_microsoft-edge-webview_31bf3856ad364e35*" -Directory | Select-Object -ExpandProperty FullName

    if ($folderPath) {
        & 'takeown' '/f' $folderPath '/r' 
        & icacls $folderPath  "/grant" "$($adminGroup.Value):(F)" '/T' '/C' 
        Remove-Item -Path $folderPath -Recurse -Force 
    } else {
        Write-Host "Folder not found."
    }
} elseif ($architecture -eq 'arm64') {
    $folderPath = Get-ChildItem -Path "C:\Windows\WinSxS" -Filter "arm64_microsoft-edge-webview_31bf3856ad364e35*" -Directory | Select-Object -ExpandProperty FullName

    if ($folderPath) {
        & 'takeown' '/f' $folderPath '/r'
        & icacls $folderPath  "/grant" "$($adminGroup.Value):(F)" '/T' '/C' 
        Remove-Item -Path $folderPath -Recurse -Force 
    } else {
        Write-Host "Folder not found."
    }
} else {
    Write-Host "Unknown architecture: $architecture"
}
& 'takeown' '/f' "C:\Windows\System32\Microsoft-Edge-Webview" '/r' 
& 'icacls' "C:\Windows\System32\Microsoft-Edge-Webview" '/grant' "$($adminGroup.Value):(F)" '/T' '/C' 
Remove-Item -Path "C:\Windows\System32\Microsoft-Edge-Webview" -Recurse -Force

# Removes OneDrive
Remove-Item "C:\Users\Default\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OneDrive.lnk" -ErrorAction Continue
Remove-Item "C:\Users\Default\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\OneDrive.exe" -ErrorAction Continue
Remove-Item "C:\Windows\System32\OneDriveSetup.exe" -ErrorAction Continue
Remove-Item "C:\Windows\SysWOW64\OneDriveSetup.exe" -ErrorAction Continue
 
# Removes Microsoft Teams
$TeamsPath = [System.IO.Path]::Combine($env:LOCALAPPDATA, 'Microsoft', 'Teams')
$TeamsUpdateExePath = [System.IO.Path]::Combine($TeamsPath, 'Update.exe')

Stop-Process -Name "*teams*" -Force -ErrorAction Continue

if ([System.IO.File]::Exists($TeamsUpdateExePath)) {
    # Uninstall app
    $proc = Start-Process $TeamsUpdateExePath "-uninstall -s" -PassThru
    $proc.WaitForExit()
}

Get-AppxPackage "*Teams*" | Remove-AppxPackage -ErrorAction Continue
Get-AppxPackage "*Teams*" -AllUsers | Remove-AppxPackage -AllUsers -ErrorAction Continue

if ([System.IO.Directory]::Exists($TeamsPath)) {
    Remove-Item $TeamsPath -Force -Recurse -ErrorAction Continue
}

# Uninstall from Uninstall registry key UninstallString
$us = (Get-ChildItem -Path HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall, HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall | Get-ItemProperty | Where-Object { $_.DisplayName -like '*Teams*'}).UninstallString
if ($us.Length -gt 0) {
    $us = ($us.Replace('/I', '/uninstall ') + ' /quiet').Replace('  ', ' ')
    $FilePath = ($us.Substring(0, $us.IndexOf('.exe') + 4).Trim())
    $ProcessArgs = ($us.Substring($us.IndexOf('.exe') + 5).Trim().replace('  ', ' '))
    $proc = Start-Process -FilePath $FilePath -Args $ProcessArgs -PassThru
    $proc.WaitForExit()
}

# Disables Teredo
$registryKeysTeredo = @(
    @{Path = "HKLM:\SYSTEM\CurrentControlSet\Services\Tcpip6\Parameters"; Name = "DisabledComponents"; Type = "DWord"; Value = 1}
)
foreach ($key in $registryKeysTeredo) {
    New-ItemProperty -Path $key.Path -Name $key.Name -PropertyType $key.Type -Value $key.Value -Force
}
netsh interface teredo set state disabled

# Disables Telemetry
# Disable Scheduled Tasks
$scheduledTasks = @(
    "Microsoft\Windows\Application Experience\Microsoft Compatibility Appraiser",
    "Microsoft\Windows\Application Experience\ProgramDataUpdater",
    "Microsoft\Windows\Autochk\Proxy",
    "Microsoft\Windows\Customer Experience Improvement Program\Consolidator",
    "Microsoft\Windows\Customer Experience Improvement Program\UsbCeip",
    "Microsoft\Windows\DiskDiagnostic\Microsoft-Windows-DiskDiagnosticDataCollector",
    "Microsoft\Windows\Feedback\Siuf\DmClient",
    "Microsoft\Windows\Feedback\Siuf\DmClientOnScenarioDownload",
    "Microsoft\Windows\Windows Error Reporting\QueueReporting",
    "Microsoft\Windows\Application Experience\MareBackup",
    "Microsoft\Windows\Application Experience\StartupAppTask",
    "Microsoft\Windows\Application Experience\PcaPatchDbTask",
    "Microsoft\Windows\Maps\MapsUpdateTask"
)
foreach ($task in $scheduledTasks) {
    schtasks /Change /TN $task /Disable
}

# Enable the Ultimate Performance power plan
powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61

# Set the Ultimate Performance power plan as active
powercfg -setactive e9a42b02-d5df-448d-aa00-03f14749eb61

# Set Services to Manual
Set-Service -Name 'AJRouter' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'ALG' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'AppIDSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'AppMgmt' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'AppReadiness' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'AppVClient' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'AppXSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Appinfo' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'AssignedAccessManagerSvc' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'AudioEndpointBuilder' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'AudioSrv' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'Audiosrv' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'AxInstSV' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'BDESVC' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'BFE' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'BITS' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'BTAGService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'BcastDVRUserService_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'BrokerInfrastructure' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'Browser' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'BthAvctpSvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'BthHFSrv' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'CDPSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'CDPUserSvc_*' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'COMSysApp' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'CaptureService_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'CertPropSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'ClipSVC' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'ConsentUxUserSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'CoreMessagingRegistrar' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'CredentialEnrollmentManagerUserSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'CryptSvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'CscService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DPS' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'DcomLaunch' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'DcpSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DevQueryBroker' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DeviceAssociationBrokerSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DeviceAssociationService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DeviceInstall' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DevicePickerUserSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DevicesFlowUserSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Dhcp' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'DiagTrack' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'DialogBlockingService' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'DispBrokerDesktopSvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'DisplayEnhancementService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DmEnrollmentSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Dnscache' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'DoSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DsSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DsmSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'DusmSvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'EFS' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'EapHost' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'EntAppSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'EventLog' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'EventSystem' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'FDResPub' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Fax' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'FontCache' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'FrameServer' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'FrameServerMonitor' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'GraphicsPerfSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'HomeGroupListener' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'HomeGroupProvider' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'HvHost' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'IEEtwCollectorService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'IKEEXT' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'InstallService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'InventorySvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'IpxlatCfgSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'KeyIso' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'KtmRm' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'LSM' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'LanmanServer' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'LanmanWorkstation' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'LicenseManager' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'LxpSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'MSDTC' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'MSiSCSI' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'MapsBroker' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'McpManagementService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'MessagingService_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'MicrosoftEdgeElevationService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'MixedRealityOpenXRSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'MpsSvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'MsKeyboardFilter' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NPSMSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NaturalAuthentication' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NcaSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NcbService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NcdAutoSetup' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NetSetupSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NetTcpPortSharing' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'Netlogon' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'Netman' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NgcCtnrSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NgcSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'NlaSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'OneSyncSvc_*' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'P9RdrService_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PNRPAutoReg' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PNRPsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PcaSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PeerDistSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PenService_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PerfHost' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PhoneSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PimIndexMaintenanceSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PlugPlay' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PolicyAgent' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Power' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'PrintNotify' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'PrintWorkflowUserSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'ProfSvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'PushToInstall' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'QWAVE' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'RasAuto' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'RasMan' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'RemoteAccess' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'RemoteRegistry' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'RetailDemo' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'RmSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'RpcEptMapper' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'RpcLocator' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'RpcSs' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'SCPolicySvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SCardSvr' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SDRSVC' -StartupType Manual -ErrorAction Continue 
Set-Service -Name 'SEMgrSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SENS' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'SNMPTRAP' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SNMPTrap' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SSDPSRV' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SamSs' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'ScDeviceEnum' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Schedule' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'SecurityHealthService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Sense' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SensorDataService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SensorService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SensrSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SessionEnv' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SgrmBroker' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'SharedAccess' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SharedRealitySvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'ShellHWDetection' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'SmsRouter' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Spooler' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'SstpSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'StateRepository' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'StiSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'StorSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'SysMain' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'SystemEventsBroker' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'TabletInputService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'TapiSrv' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'TermService' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'TextInputManagementService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Themes' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'TieringEngineService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'TimeBroker' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'TimeBrokerSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'TokenBroker' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'TrkWks' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'TroubleshootingSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'TrustedInstaller' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'UI0Detect' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'UdkUserSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'UevAgentService' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'UmRdpService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'UnistoreSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'UserDataSvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'UserManager' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'UsoSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'VGAuthService' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'VMTools' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'VSS' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'VacSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'VaultSvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'W32Time' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WEPHOSTSVC' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WFDSConMgrSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WMPNetworkSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WManSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WPDBusEnum' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WSService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WSearch' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WaaSMedicSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WalletService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WarpJITSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WbioSrvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Wcmsvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'WcsPlugInService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WdNisSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WdiServiceHost' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WdiSystemHost' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WebClient' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Wecsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WerSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WiaRpc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WinDefend' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'WinHttpAutoProxySvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WinRM' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'Winmgmt' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'WlanSvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'WpcMonSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WpnService' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'WpnUserService_*' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'WwanSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'XblAuthManager' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'XblGameSave' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'XboxGipSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'XboxNetApiSvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'autotimesvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'bthserv' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'camsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'cbdhsvc_*' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'cloudidsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'dcsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'defragsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'diagnosticshub.standardcollector.service' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'diagsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'dmwappushservice' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'dot3svc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'edgeupdate' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'edgeupdatem' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'embeddedmode' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'fdPHost' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'fhsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'gpsvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'hidserv' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'icssvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'iphlpsvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'lfsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'lltdsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'lmhosts' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'mpssvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'msiserver' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'netprofm' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'nsi' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'p2pimsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'p2psvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'perceptionsimulation' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'pla' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'seclogon' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'shpamsvc' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'smphost' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'spectrum' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'sppsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'ssh-agent' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'svsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'swprv' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'tiledatamodelsvc' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'tzautoupdate' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'uhssvc' -StartupType Disabled -ErrorAction Continue
Set-Service -Name 'upnphost' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vds' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vm3dservice' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vmicguestinterface' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vmicheartbeat' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vmickvpexchange' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vmicrdv' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vmicshutdown' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vmictimesync' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vmicvmsession' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vmicvss' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'vmvss' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'wbengine' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'wcncsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'webthreatdefsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'webthreatdefusersvc_*' -StartupType Automatic -ErrorAction Continue
Set-Service -Name 'wercplsupport' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'wisvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'wlidsvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'wlpasvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'wmiApSrv' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'workfolderssvc' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'wuauserv' -StartupType Manual -ErrorAction Continue
Set-Service -Name 'wudfsvc' -StartupType Manual -ErrorAction Continue]]>
		</File>
		<!--Default User Registry Entries - This Sets Features for the Default User-->
		<File path="C:\Windows\Setup\Scripts\defaultuser.cmd">
:: Disabling the Delivery of Personalized or Suggested Content Like App Suggestions, Tips, and Advertisements in Windows
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "ContentDeliveryAllowed" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "FeatureManagementEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "OEMPreInstalledAppsEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "PreInstalledAppsEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "PreInstalledAppsEverEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SilentInstalledAppsEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "RotatingLockScreenEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "RotatingLockScreenOverlayEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SoftLandingEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContentEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-310093Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-338387Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-338388Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-338389Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-338393Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-353698Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-353694Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-353696Enabled" /t REG_DWORD /d 0 /f
reg.exe delete "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager\Subscriptions" /f
reg.exe delete "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager\SuggestedApps" /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SystemPaneSuggestionsEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" /v TailoredExperiencesWithDiagnosticDataEnabled /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" /v IsMiEnabled /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Speech_OneCore\Settings\OnlineSpeechPrivacy" /v "HasAccepted" /t REG_DWORD /d 0 /f

:: Removes Copilot
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Runonce" /v "UninstallCopilot" /t REG_SZ /d "" /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Policies\Microsoft\Windows\WindowsCopilot" /v TurnOffWindowsCopilot /t REG_DWORD /d 1 /f

:: Removes Store Banner in Notepad
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Notepad" /v ShowStoreBanner /t REG_DWORD /d 0 /f

:: Removes OneDrive
reg.exe delete "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v OneDriveSetup /f

:: Align the taskbar to the left on Windows 11
reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarAl /t REG_DWORD /d 0 /f

:: Hides or Removes People from Taskbar
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People" /v PeopleBand /t REG_DWORD /d 0 /f

:: Hides Task View Button on Taskbar
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v ShowTaskViewButton /t REG_DWORD /d 0 /f

:: Hides and Removes News and Interests from PC and Taskbar
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Feeds" /v ShellFeedsTaskbarViewMode /t REG_DWORD /d 2 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Feeds" /v ShellFeedsEnabled /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" /v EnableFeeds /t REG_DWORD /d 0 /f

:: Disables User Account Sync
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" /v SettingSyncEnabled /t REG_DWORD /d 0 /f

:: Disables Location Services
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" /v LocationServicesEnabled /t REG_DWORD /d 0 /f

:: Disables Input Personalization Settings
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Personalization\Settings" /v AcceptedPrivacyPolicy /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\InputPersonalization" /v RestrictImplicitTextCollection /t REG_DWORD /d 1 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\InputPersonalization" /v RestrictImplicitInkCollection /t REG_DWORD /d 1 /f

:: Disables Automatic Feedback Sampling
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Feedback" /v AutoSample /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Feedback" /v ServiceEnabled /t REG_DWORD /d 0 /f

:: Disables Recent Documents Tracking
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v Start_TrackDocs /t REG_DWORD /d 0 /f

:: Disables Background Apps
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" /v GlobalUserDisabled /t REG_DWORD /d 1 /f

:: Disable "Let websites provide locally relevant content by accessing my language list"
reg.exe add "HKU\DefaultUser\Control Panel\International\User Profile" /v HttpAcceptLanguageOptOut /t REG_DWORD /d 1 /f

:: Disables "Let Windows track app launches to improve Start and search results"
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v Start_TrackProgs /t REG_DWORD /d 0 /f

:: Disables App Diagnostics
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\AppDiagnostics" /v AppDiagnosticsEnabled /t REG_DWORD /d 0 /f

:: Disables Delivery Optimization
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization" /v DODownloadMode /t REG_DWORD /d 0 /f

:: Disables Tablet Mode
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\ImmersiveShell" /v TabletMode /t REG_DWORD /d 0 /f

:: Disables Use Sign-In Info for User Account
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication" /v UseSignInInfo /t REG_DWORD /d 0 /f

:: Disables Maps Auto Download
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Maps" /v AutoDownload /t REG_DWORD /d 0 /f

:: Disables Telemetry and Ads
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Siuf\Rules" /v NumberOfSIUFInPeriod /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v DisableTailoredExperiencesWithDiagnosticData /t REG_DWORD /d 1 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v DisableWindowsConsumerFeatures /t REG_DWORD /d 1 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v ShowSyncProviderNotifications /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo" /v Enabled /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" /v "HarvestContacts" /t REG_DWORD /d 0 /f

:: Manages and displays the status of ongoing operations, such as file copy, move, delete, etc.
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager" /v EnthusiastMode /t REG_DWORD /d 1 /f

:: Set File Explorer to Open This PC instead of Quick Access
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v LaunchTo /t REG_DWORD /d 1 /f

:: On Shutdown, Windows will automatically close any running applications
reg.exe add "HKU\DefaultUser\Control Panel\Desktop" /v AutoEndTasks /t REG_DWORD /d 1 /f

:: Sets the Mouse hover time to 400 milliseconds
reg.exe add "HKU\DefaultUser\Control Panel\Mouse" /v MouseHoverTime /t REG_SZ /d "400" /f

:: Hides the Meet Now Button on the Taskbar
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v HideSCAMeetNow /t REG_DWORD /d 1 /f

:: Disables the Second Out-Of-Box Experience
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\UserProfileEngagement" /v ScoobeSystemSettingEnabled /t REG_DWORD /d 0 /f

:: Set Registry Keys to Enable End Task With Right Click
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarDeveloperSettings /t REG_DWORD /d 1 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarEndTask /t REG_DWORD /d 1 /f

:: Set Classic Right-Click Menu for Windows 11
reg.exe add "HKU\DefaultUser\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32" /ve /t REG_SZ /d "" /f

:: Disable Xbox GameDVR
reg.exe add "HKU\DefaultUser\System\GameConfigStore" /v GameDVR_FSEBehavior /t REG_DWORD /d 2 /f
reg.exe add "HKU\DefaultUser\System\GameConfigStore" /v GameDVR_Enabled /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\System\GameConfigStore" /v GameDVR_DXGIHonorFSEWindowsCompatible /t REG_DWORD /d 1 /f
reg.exe add "HKU\DefaultUser\System\GameConfigStore" /v GameDVR_HonorUserFSEBehaviorMode /t REG_DWORD /d 1 /f
reg.exe add "HKU\DefaultUser\System\GameConfigStore" /v GameDVR_EFSEFeatureFlags /t REG_DWORD /d 0 /f

:: Disables Bing Search in Start Menu
reg.exe add "HKU\DefaultUser\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v DisableSearchBoxSuggestions /t REG_DWORD /d 1 /f

:: Enables NumLock on Startup
reg.exe add "HKU\DefaultUser\Control Panel\Keyboard" /v InitialKeyboardIndicators /t REG_SZ /d 2 /f

:: Disables Sticky Keys
reg.exe add "HKU\DefaultUser\Control Panel\Accessibility\StickyKeys" /v Flags /t REG_SZ /d "506" /f
reg.exe add "HKU\DefaultUser\Control Panel\Accessibility\StickyKeys" /v HotkeyFlags /t REG_SZ /d "58" /f

:: Enables Show File Extensions
reg.exe add "HKU\DefaultUser\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v HideFileExt /t REG_DWORD /d 0 /f

:: Enables Dark Mode
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v AppsUseLightTheme /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v ColorPrevalence /t REG_DWORD /d 0 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v EnableTransparency /t REG_DWORD /d 1 /f
reg.exe add "HKU\DefaultUser\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v SystemUsesLightTheme /t REG_DWORD /d 0 /f

:: Disables Windows Recall on Copilot+ PC - Credit Britec09
reg.exe add "HKU\DefaultUser\Software\Policies\Microsoft\Windows\WindowsAI" /f
reg.exe add "HKU\DefaultUser\Software\Policies\Microsoft\Windows\WindowsAI" /v "DisableAIDataAnalysis" /t REG_DWORD /d 1 /f
reg.exe add "HKU\DefaultUser\Software\Policies\Microsoft\Windows\Windows AI" /v "TurnOffSavingSnapshots" /t REG_DWORD /d 1 /f
		</File>
		<!--Current User Registry Entries - This Sets Features for the Current User as Some Entries Defined in DefaultUser is Reset for Some Reason-->
		<File path="C:\Windows\Setup\Scripts\currentuser.cmd">
:: Disabling the Delivery of Personalized or Suggested Content Like App Suggestions, Tips, and Advertisements in Windows
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "ContentDeliveryAllowed" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "FeatureManagementEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "OEMPreInstalledAppsEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "PreInstalledAppsEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "PreInstalledAppsEverEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SilentInstalledAppsEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "RotatingLockScreenEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "RotatingLockScreenOverlayEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SoftLandingEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContentEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-310093Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-338387Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-338388Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-338389Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-338393Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-353698Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-353694Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SubscribedContent-353696Enabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager" /v "SystemPaneSuggestionsEnabled" /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" /v TailoredExperiencesWithDiagnosticDataEnabled /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" /v IsMiEnabled /t REG_DWORD /d 0 /f
reg.exe delete "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager\Subscriptions" /f
reg.exe delete "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ContentDeliveryManager\SuggestedApps" /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Speech_OneCore\Settings\OnlineSpeechPrivacy" /v "HasAccepted" /t REG_DWORD /d 0 /f

:: Removes Copilot
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Runonce" /v "UninstallCopilot" /t REG_SZ /d "" /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\WindowsCopilot" /v TurnOffWindowsCopilot /t REG_DWORD /d 1 /f

:: Removes Store Banner in Notepad
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Notepad" /v ShowStoreBanner /t REG_DWORD /d 0 /f

:: Removes OneDrive
reg.exe delete "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run" /v OneDriveSetup /f

:: Align the taskbar to the left on Windows 11
reg.exe add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarAl /t REG_DWORD /d 0 /f

:: Hides or Removes People from Taskbar
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced\People" /v PeopleBand /t REG_DWORD /d 0 /f

:: Hides Task View Button on Taskbar
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v ShowTaskViewButton /t REG_DWORD /d 0 /f

:: Hides and Removes News and Interests from PC and Taskbar
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Feeds" /v ShellFeedsTaskbarViewMode /t REG_DWORD /d 2 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Feeds" /v ShellFeedsEnabled /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\Windows Feeds" /v EnableFeeds /t REG_DWORD /d 0 /f

:: Disables User Account Sync
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" /v SettingSyncEnabled /t REG_DWORD /d 0 /f

:: Disables Location Services
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Privacy" /v LocationServicesEnabled /t REG_DWORD /d 0 /f

:: Disables Input Personalization Settings
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Personalization\Settings" /v AcceptedPrivacyPolicy /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\InputPersonalization" /v RestrictImplicitTextCollection /t REG_DWORD /d 1 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\InputPersonalization" /v RestrictImplicitInkCollection /t REG_DWORD /d 1 /f

:: Disables Automatic Feedback Sampling
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Feedback" /v AutoSample /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Feedback" /v ServiceEnabled /t REG_DWORD /d 0 /f

:: Disables Recent Documents Tracking
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v Start_TrackDocs /t REG_DWORD /d 0 /f

:: Disable "Let websites provide locally relevant content by accessing my language list"
reg.exe add "HKEY_CURRENT_USER\Control Panel\International\User Profile" /v HttpAcceptLanguageOptOut /t REG_DWORD /d 1 /f

:: Disables "Let Windows track app launches to improve Start and search results"
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v Start_TrackProgs /t REG_DWORD /d 0 /f

:: Disables Background Apps
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\BackgroundAccessApplications" /v GlobalUserDisabled /t REG_DWORD /d 1 /f

:: Disables App Diagnostics
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\AppDiagnostics" /v AppDiagnosticsEnabled /t REG_DWORD /d 0 /f

:: Disables Delivery Optimization
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\DeliveryOptimization" /v DODownloadMode /t REG_DWORD /d 0 /f

:: Disables Tablet Mode
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\ImmersiveShell" /v TabletMode /t REG_DWORD /d 0 /f

:: Disables Use Sign-In Info for User Account
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Authentication" /v UseSignInInfo /t REG_DWORD /d 0 /f

:: Disables Maps Auto Download
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Maps" /v AutoDownload /t REG_DWORD /d 0 /f

:: Disables Telemetry and Ads
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Siuf\Rules" /v NumberOfSIUFInPeriod /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v DisableTailoredExperiencesWithDiagnosticData /t REG_DWORD /d 1 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\CloudContent" /v DisableWindowsConsumerFeatures /t REG_DWORD /d 1 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v ShowSyncProviderNotifications /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\AdvertisingInfo" /v Enabled /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\InputPersonalization\TrainedDataStore" /v "HarvestContacts" /t REG_DWORD /d 0 /f

:: Manages and displays the status of ongoing operations, such as file copy, move, delete, etc.
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\OperationStatusManager" /v EnthusiastMode /t REG_DWORD /d 1 /f

:: Set File Explorer to Open This PC instead of Quick Access
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v LaunchTo /t REG_DWORD /d 1 /f

:: On Shutdown, Windows will automatically close any running applications
reg.exe add "HKEY_CURRENT_USER\Control Panel\Desktop" /v AutoEndTasks /t REG_DWORD /d 1 /f

:: Sets the Mouse hover time to 400 milliseconds
reg.exe add "HKEY_CURRENT_USER\Control Panel\Mouse" /v MouseHoverTime /t REG_SZ /d "400" /f

:: Hides the Meet Now Button on the Taskbar
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\Explorer" /v HideSCAMeetNow /t REG_DWORD /d 1 /f

:: Disables the Second Out-Of-Box Experience
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\UserProfileEngagement" /v ScoobeSystemSettingEnabled /t REG_DWORD /d 0 /f

:: Set Registry Keys to Enable End Task With Right Click
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarDeveloperSettings /t REG_DWORD /d 1 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v TaskbarEndTask /t REG_DWORD /d 1 /f

:: Set Classic Right-Click Menu for Windows 11
reg.exe add "HKEY_CURRENT_USER\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32" /ve /t REG_SZ /d "" /f

:: Disable Xbox GameDVR
reg.exe add "HKEY_CURRENT_USER\System\GameConfigStore" /v GameDVR_FSEBehavior /t REG_DWORD /d 2 /f
reg.exe add "HKEY_CURRENT_USER\System\GameConfigStore" /v GameDVR_Enabled /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\System\GameConfigStore" /v GameDVR_DXGIHonorFSEWindowsCompatible /t REG_DWORD /d 1 /f
reg.exe add "HKEY_CURRENT_USER\System\GameConfigStore" /v GameDVR_HonorUserFSEBehaviorMode /t REG_DWORD /d 1 /f
reg.exe add "HKEY_CURRENT_USER\System\GameConfigStore" /v GameDVR_EFSEFeatureFlags /t REG_DWORD /d 0 /f

:: Disables Bing Search in Start Menu
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v DisableSearchBoxSuggestions /t REG_DWORD /d 1 /f

:: Enables NumLock on Startup
reg.exe add "HKEY_CURRENT_USER\Control Panel\Keyboard" /v InitialKeyboardIndicators /t REG_SZ /d 2 /f

:: Disables Sticky Keys
reg.exe add "HKEY_CURRENT_USER\Control Panel\Accessibility\StickyKeys" /v Flags /t REG_SZ /d "506" /f
reg.exe add "HKEY_CURRENT_USER\Control Panel\Accessibility\StickyKeys" /v HotkeyFlags /t REG_SZ /d "58" /f

:: Enables Show File Extensions
reg.exe add "HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v HideFileExt /t REG_DWORD /d 0 /f

:: Enables Dark Mode
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v AppsUseLightTheme /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v ColorPrevalence /t REG_DWORD /d 0 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v EnableTransparency /t REG_DWORD /d 1 /f
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v SystemUsesLightTheme /t REG_DWORD /d 0 /f

:: Don't Update Last Access Time Stamp - This Can Improve File System Performance
fsutil.exe behavior set disableLastAccess 1

:: Hides the Language Switcher on the Taskbar
reg.exe add "HKEY_CURRENT_USER\SOFTWARE\Microsoft\CTF\LangBar" /v ShowStatus /t REG_DWORD /d 3 /f

:: Disables Windows Recall on Copilot+ PC - Credit Britec09
reg.exe add "HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\WindowsAI" /f
reg.exe add "HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\WindowsAI" /v "DisableAIDataAnalysis" /t REG_DWORD /d 1 /f
reg.exe add "HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Windows AI" /v "TurnOffSavingSnapshots" /t REG_DWORD /d 1 /f

:: Restart PC to Apply All Changes
shutdown /r -t 1
	</File>
	<!--Additional Edge Removal Script by Chris Titus & AveYo to Ensure Complete Removal-->
	<File path="C:\Windows\Setup\Scripts\edgeremoval.bat">
			<![CDATA[
@(set "0=%~f0"^)#) & powershell -nop -c iex([io.file]::ReadAllText($env:0)) & exit /b
#:: made by AveYo source: https://raw.githubusercontent.com/AveYo/fox/main/Edge_Removal.bat
sp 'HKCU:\Volatile Environment' 'Edge_Removal' @'

$also_remove_webview = 0

$host.ui.RawUI.WindowTitle = 'Edge Removal - AveYo, 2023.09.09'
$remove_win32 = @("Microsoft Edge","Microsoft Edge Update"); $remove_appx = @("MicrosoftEdge"); $skip = @() # @("DevTools")
if ($also_remove_webview -eq 1) {$remove_win32 += "Microsoft EdgeWebView"; $remove_appx += "WebExperience","Win32WebViewHost"}

## 1 bonus! enter into powershell console: firefox / edge / webview to install a browser / reinstall edge or webview after removal
function global:firefox { $url = 'https://download.mozilla.org/?product=firefox-stub'
  $setup = "$((new-object -ComObject Shell.Application).NameSpace('shell:Downloads').Self.Path)\Firefox Installer.exe"
  write-host $url; Invoke-WebRequest $url -OutFile $setup; start $setup
}
function global:edge { $url = 'https://go.microsoft.com/fwlink/?linkid=2108834&Channel=Stable&language=en'
  $setup = "$((new-object -ComObject Shell.Application).NameSpace('shell:Downloads').Self.Path)\MicrosoftEdgeSetup.exe"
  write-host $url; Invoke-WebRequest $url -OutFile $setup; prepare_edge; start $setup
}
function global:webview { $url = 'https://go.microsoft.com/fwlink/p/?LinkId=2124703'
  $setup = "$((new-object -ComObject Shell.Application).NameSpace('shell:Downloads').Self.Path)\MicrosoftEdgeWebview2Setup.exe"
  write-host $url; Invoke-WebRequest $url -OutFile $setup; prepare_webview; start $setup
}
## helper for set-itemproperty remove-itemproperty new-item remove-item with auto test-path
function global:sp_test_path { if (test-path $args[0]) {Microsoft.PowerShell.Management\Set-ItemProperty @args} else {
  Microsoft.PowerShell.Management\New-Item $args[0] -force -ea 0 >''; Microsoft.PowerShell.Management\Set-ItemProperty @args} }
function global:rp_test_path { if (test-path $args[0]) {Microsoft.PowerShell.Management\Remove-ItemProperty @args} }
function global:ni_test_path { if (-not (test-path $args[0])) {Microsoft.PowerShell.Management\New-Item @args} }
function global:ri_test_path { if (test-path $args[0]) {Microsoft.PowerShell.Management\Remove-Item @args} }
foreach ($f in 'sp','rp','ni','ri') {set-alias -Name $f -Value "${f}_test_path" -Scope Local -Option AllScope -force -ea 0}
## helper for edge reinstall - remove bundled OpenWebSearch redirector and edgeupdate policies
function global:prepare_edge {
  foreach ($f in 'ni','ri','sp','rp') {set-alias -Name $f -Value "${f}_test_path" -Scope Local -Option AllScope -force -ea 0}
  $MS=($env:ProgramFiles,${env:ProgramFiles(x86)})[[Environment]::Is64BitOperatingSystem]+'\Microsoft\Edge\Application\msedge.exe'
  ri "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\msedge.exe" -recurse -force -ea 0
  ri "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\ie_to_edge_stub.exe" -recurse -force -ea 0
  ri 'Registry::HKEY_Users\S-1-5-21*\Software\Classes\microsoft-edge' -recurse -force -ea 0
  ri 'Registry::HKEY_Users\S-1-5-21*\Software\Classes\MSEdgeHTM' -recurse -force -ea 0
  ni "HKLM:\SOFTWARE\Classes\microsoft-edge\shell\open\command" -force -ea 0 >''
  sp "HKLM:\SOFTWARE\Classes\microsoft-edge\shell\open\command" '(Default)' "`"$MS`" --single-argument %%1" -force -ea 0 
  ni "HKLM:\SOFTWARE\Classes\MSEdgeHTM\shell\open\command" -force -ea 0 >''
  sp "HKLM:\SOFTWARE\Classes\MSEdgeHTM\shell\open\command" '(Default)' "`"$MS`" --single-argument %%1" -force -ea 0
  foreach ($p in 'HKLM:\SOFTWARE\Policies','HKLM:\SOFTWARE','HKLM:\SOFTWARE\WOW6432Node') {
    rp "$p\Microsoft\EdgeUpdate" 'InstallDefault' -force -ea 0
    rp "$p\Microsoft\EdgeUpdate" 'Install{56EB18F8-B008-4CBD-B6D2-8C97FE7E9062}' -force -ea 0
    rp "$p\Microsoft\EdgeUpdate" 'Install{F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}' -force -ea 0
  }
  $edgeupdate='Microsoft\EdgeUpdate\Clients\{56EB18F8-B008-4CBD-B6D2-8C97FE7E9062}'
  $webvupdate='Microsoft\EdgeUpdate\Clients\{F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}'
  $on_actions='on-os-upgrade','on-logon','on-logon-autolaunch','on-logon-startup-boost'
  foreach ($p in 'HKLM:\SOFTWARE','HKLM:\SOFTWARE\Wow6432Node') { foreach ($launch in $on_actions) {
    ri "$p\$edgeupdate\Commands\$launch" -force -ea 0; ri "$p\$webvupdate\Commands\$launch" -force -ea 0
  }}
}
## helper for webview reinstall - restore webexperience (widgets) if available
function global:prepare_webview {
  $cfg = @{Register=$true; ForceApplicationShutdown=$true; ForceUpdateFromAnyVersion=$true; DisableDevelopmentMode=$true} 
  dir "$env:ProgramFiles\WindowsApps\MicrosoftWindows.Client.WebExperience*\AppxManifest.xml" -rec -ea 0 | Add-AppxPackage @cfg
  dir "$env:SystemRoot\SystemApps\Microsoft.Win32WebViewHost*\AppxManifest.xml" -rec -ea 0 | Add-AppxPackage @cfg
  kill -name explorer -ea 0; if ((get-process -name 'explorer' -ea 0) -eq $null) {start explorer}
}

## 2 enable admin privileges
$D1=[uri].module.gettype('System.Diagnostics.Process')."GetM`ethods"(42) |where {$_.Name -eq 'SetPrivilege'} #`:no-ev-warn
'SeSecurityPrivilege','SeTakeOwnershipPrivilege','SeBackupPrivilege','SeRestorePrivilege'|foreach {$D1.Invoke($null, @("$_",2))}

## 3 shut edge & webview clone stuff down and gather install paths
$shut = 'explorer','Widgets','widgetservice','msedgewebview2','MicrosoftEdge*','chredge','msedge','edge'
$shut+= 'msteams','msfamily','WebViewHost','Clipchamp' 
cd $env:systemdrive; taskkill /im explorer.exe /f 2>&1 >''; foreach ($p in $shut) {kill -name $p -force -ea 0}
prepare_edge
## clear win32 uninstall block
foreach ($hk in 'HKCU:','HKLM:') { foreach ($wow in '','\Wow6432Node') { foreach ($i in $remove_win32) {
  rp "$hk\SOFTWARE${wow}\Microsoft\Windows\CurrentVersion\Uninstall\$i" 'NoRemove' -force -ea 0
  ni "$hk\SOFTWARE${wow}\Microsoft\EdgeUpdateDev" -force >''
  sp "$hk\SOFTWARE${wow}\Microsoft\EdgeUpdateDev" 'AllowUninstall' 1 -type Dword -force
}}}
## find all Edge setup.exe and gather BHO paths for OpenWebSearch / MSEdgeRedirect usage
$edges = @(); $bho = @(); 'LocalApplicationData','ProgramFilesX86','ProgramFiles' |foreach {
  $folder = [Environment]::GetFolderPath($_); $bho += dir "$folder\Microsoft\Edge*\ie_to_edge_stub.exe" -rec -ea 0
  if ($also_remove_webview -eq 1) {$edges += dir "$folder\Microsoft\Edge*\setup.exe" -rec -ea 0 |where {$_ -like '*EdgeWebView*'}}
  $edges += dir "$folder\Microsoft\Edge*\setup.exe" -rec -ea 0 |where {$_ -notlike '*EdgeWebView*'}
}
## use dedicated C:\Scripts path to save OpenWebSearch (due to Sigma rules FUD)
$DIR = "$env:SystemDrive\Scripts"; mkdir $DIR -ea 0 >''
## export OpenWebSearch innovative redirector - used by MSEdgeRedirect as well
foreach ($b in $bho) { if (test-path $b) { try {copy $b "$DIR\ie_to_edge_stub.exe" -force -ea 0} catch{} } }

## 4 remove found *Edge* appx packages with unblock tricks
$provisioned = get-appxprovisionedpackage -online; $appxpackage = get-appxpackage -allusers; $eol = @()
$store = 'HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\Appx\AppxAllUserStore'
$users = @('S-1-5-18'); if (test-path $store) {$users += $((dir $store -ea 0 |where {$_ -like '*S-1-5-21*'}).PSChildName)}
foreach ($choice in $remove_appx) { if ('' -eq $choice.Trim()) {continue}
  foreach ($appx in $($provisioned |where {$_.PackageName -like "*$choice*"})) {
    $next = !1; foreach ($no in $skip) {if ($appx.PackageName -like "*$no*") {$next = !0}} ; if ($next) {continue}
    $PackageName = $appx.PackageName; $PackageFamilyName = ($appxpackage |where {$_.Name -eq $appx.DisplayName}).PackageFamilyName 
    ni "$store\Deprovisioned\$PackageFamilyName" -force >''; $PackageFamilyName  
    foreach ($sid in $users) {ni "$store\EndOfLife\$sid\$PackageName" -force >''} ; $eol += $PackageName
    dism /online /set-nonremovableapppolicy /packagefamily:$PackageFamilyName /nonremovable:0 >''
    remove-appxprovisionedpackage -packagename $PackageName -online -allusers >''
  }
  foreach ($appx in $($appxpackage |where {$_.PackageFullName -like "*$choice*"})) {
    $next = !1; foreach ($no in $skip) {if ($appx.PackageFullName -like "*$no*") {$next = !0}} ; if ($next) {continue}
    $PackageFullName = $appx.PackageFullName; 
    ni "$store\Deprovisioned\$appx.PackageFamilyName" -force >''; $PackageFullName
    foreach ($sid in $users) {ni "$store\EndOfLife\$sid\$PackageFullName" -force >''} ; $eol += $PackageFullName
    dism /online /set-nonremovableapppolicy /packagefamily:$PackageFamilyName /nonremovable:0 >''
    remove-appxpackage -package $PackageFullName -allusers >''
  }
}

## 5 run found *Edge* setup.exe with uninstall args and wait in-between
foreach ($setup in $edges) { if (test-path $setup) {
  if ($setup -like '*EdgeWebView*') {$target = "--msedgewebview"} else {$target = "--msedge"}
  $removal = "--uninstall $target --system-level --verbose-logging --force-uninstall"
  try {write-host $setup $removal; start -wait $setup -args $removal} catch {}
  do {sleep 3} while ((get-process -name 'setup','MicrosoftEdge*' -ea 0).Path -like '*\Microsoft\Edge*')
}}

## 6 extra cleanup
foreach ($PF in $env:ProgramFiles,${env:ProgramFiles(x86)}) { if (test-path "$PF\Microsoft\EdgeUpdate\MicrosoftEdgeUpdate.exe") {
  write-host "$PF\Microsoft\EdgeUpdate\MicrosoftEdgeUpdate.exe /uninstall"
  start -wait "$PF\Microsoft\EdgeUpdate\MicrosoftEdgeUpdate.exe" -args '/uninstall'
  do {sleep 3} while ((get-process -name 'setup','MicrosoftEdge*' -ea 0).Path -like '*\Microsoft\Edge*')
  if ($also_remove_webview -eq 1) { foreach ($hk in 'HKCU:','HKLM:') { foreach ($wow in '','\Wow6432Node') {
    ri "$hk\SOFTWARE${wow}\Microsoft\Windows\CurrentVersion\Uninstall\Microsoft Edge Update" -rec -force -ea 0 }}
    ri "$PF\Microsoft\EdgeUpdate" -rec -force -ea 0; Unregister-ScheduledTask -TaskName MicrosoftEdgeUpdate* -Confirm:$false -ea 0
  }  
}}
$appdata = $([Environment]::GetFolderPath('ApplicationData'))
ri "$appdata\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar\Tombstones\Microsoft Edge.lnk" -force
ri "$appdata\Microsoft\Internet Explorer\Quick Launch\Microsoft Edge.lnk" -force

## undo eol unblock trick to prevent latest cumulative update (LCU) failing 
foreach ($sid in $users) { foreach ($PackageName in $eol) {ri "$store\EndOfLife\$sid\$PackageName" -force >''} }

## set (almost) useless policies to prevent unsolicited reinstalls 
foreach ($p in 'HKLM:\SOFTWARE\Policies','HKLM:\SOFTWARE','HKLM:\SOFTWARE\WOW6432Node') {
  ni "$p\Microsoft\EdgeUpdate" -force >''
  sp "$p\Microsoft\EdgeUpdate" 'InstallDefault' 0 -type Dword -force
  sp "$p\Microsoft\EdgeUpdate" 'Install{56EB18F8-B008-4CBD-B6D2-8C97FE7E9062}' 0 -type Dword -force
  sp "$p\Microsoft\EdgeUpdate" 'Install{F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}' 1 -type Dword -force
  sp "$p\Microsoft\EdgeUpdate" 'DoNotUpdateToEdgeWithChromium' 1 -type Dword -force
}
$edgeupdate='Microsoft\EdgeUpdate\Clients\{56EB18F8-B008-4CBD-B6D2-8C97FE7E9062}'
$webvupdate='Microsoft\EdgeUpdate\Clients\{F3017226-FE2A-4295-8BDF-00C3A9A7E4C5}'
$on_actions='on-os-upgrade','on-logon','on-logon-autolaunch','on-logon-startup-boost'
foreach ($p in 'HKLM:\SOFTWARE','HKLM:\SOFTWARE\Wow6432Node') { foreach ($launch in $on_actions) {
  ni "$p\$edgeupdate\Commands\$launch" -force >''; sp "$p\$edgeupdate\Commands\$launch" 'CommandLine' 'systray.exe' -force
  ni "$p\$webvupdate\Commands\$launch" -force >''; sp "$p\$webvupdate\Commands\$launch" 'CommandLine' 'systray.exe' -force
}}

## 7 add bundled OpenWebSearch script to redirect microsoft-edge: anti-competitive links to the default browser
$MSEP = ($env:ProgramFiles,${env:ProgramFiles(x86)})[[Environment]::Is64BitOperatingSystem] + '\Microsoft\Edge\Application'
$IFEO = 'HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options'
$MIN = ('--headless','--width 1 --height 1')[([environment]::OSVersion.Version.Build) -gt 25179]
$CMD = "$env:systemroot\system32\conhost.exe $MIN" # AveYo: minimize prompt - see Terminal issue #13914
ni "HKLM:\SOFTWARE\Classes\microsoft-edge\shell\open\command" -force >''
sp "HKLM:\SOFTWARE\Classes\microsoft-edge" '(Default)' 'URL:microsoft-edge' -force
sp "HKLM:\SOFTWARE\Classes\microsoft-edge" 'URL Protocol' '' -force
sp "HKLM:\SOFTWARE\Classes\microsoft-edge" 'NoOpenWith' '' -force
sp "HKLM:\SOFTWARE\Classes\microsoft-edge\shell\open\command" '(Default)' "`"$DIR\ie_to_edge_stub.exe`" %1" -force
ni "HKLM:\SOFTWARE\Classes\MSEdgeHTM\shell\open\command" -force >''
sp "HKLM:\SOFTWARE\Classes\MSEdgeHTM" 'NoOpenWith' '' -force
sp "HKLM:\SOFTWARE\Classes\MSEdgeHTM\shell\open\command" '(Default)' "`"$DIR\ie_to_edge_stub.exe`" %1" -force
ni "$IFEO\ie_to_edge_stub.exe\0" -force >''
sp "$IFEO\ie_to_edge_stub.exe" 'UseFilter' 1 -type Dword -force
sp "$IFEO\ie_to_edge_stub.exe\0" 'FilterFullPath' "$DIR\ie_to_edge_stub.exe" -force
sp "$IFEO\ie_to_edge_stub.exe\0" 'Debugger' "$CMD $DIR\OpenWebSearch.cmd" -force
ni "$IFEO\msedge.exe\0" -force >''
sp "$IFEO\msedge.exe" 'UseFilter' 1 -type Dword -force
sp "$IFEO\msedge.exe\0" 'FilterFullPath' "$MSEP\msedge.exe" -force
sp "$IFEO\msedge.exe\0" 'Debugger' "$CMD $DIR\OpenWebSearch.cmd" -force

$OpenWebSearch = @$
@title OpenWebSearch Redux & echo off & set ?= open start menu web search, widgets links or help in your chosen browser - by AveYo
for /f %%E in ('"prompt $E$S& for %%e in (1) do rem"') do echo;%%E[2t 2>nul & rem AveYo: minimize prompt
call :reg_var "HKCU\SOFTWARE\Microsoft\Windows\Shell\Associations\UrlAssociations\https\UserChoice" ProgID ProgID
if /i "%ProgID%" equ "MSEdgeHTM" echo;Default browser is set to Edge! Change it or remove OpenWebSearch script. & pause & exit /b
call :reg_var "HKCR\%ProgID%\shell\open\command" "" Browser
set Choice=& for %%. in (%Browser%) do if not defined Choice set "Choice=%%~."
call :reg_var "HKCR\MSEdgeMHT\shell\open\command" "" FallBack
set "Edge=" & for %%. in (%FallBack%) do if not defined Edge set "Edge=%%~."
set "URI=" & set "URL=" & set "NOOP=" & set "PassTrough=%Edge:msedge=edge%"
set "CLI=%CMDCMDLINE:"=``% "
if defined CLI set "CLI=%CLI:*ie_to_edge_stub.exe`` =%"
if defined CLI set "CLI=%CLI:*ie_to_edge_stub.exe =%"
if defined CLI set "CLI=%CLI:*msedge.exe`` =%"
if defined CLI set "CLI=%CLI:*msedge.exe =%"
set "FIX=%CLI:~-1%"
if defined CLI if "%FIX%"==" " set "CLI=%CLI:~0,-1%"
if defined CLI set "RED=%CLI:microsoft-edge=%"
if defined CLI set "URL=%CLI:http=%"
if defined CLI set "ARG=%CLI:``="%"
if "%CLI%" equ "%RED%" (set NOOP=1) else if "%CLI%" equ "%URL%" (set NOOP=1)
if defined NOOP if exist "%PassTrough%" start "" "%PassTrough%" %ARG%
if defined NOOP exit /b
set "URL=%CLI:*microsoft-edge=%"
set "URL=http%URL:*http=%"
set "FIX=%URL:~-2%"
if defined URL if "%FIX%"=="``" set "URL=%URL:~0,-2%"
call :dec_url
start "" "%Choice%" "%URL%"
exit

:reg_var [USAGE] call :reg_var "HKCU\Volatile Environment" value-or-"" variable [extra options]
set {var}=& set {reg}=reg query "%~1" /v %2 /z /se "," /f /e& if %2=="" set {reg}=reg query "%~1" /ve /z /se "," /f /e
for /f "skip=2 tokens=* delims=" %%V in ('%{reg}% %4 %5 %6 %7 %8 %9 2^>nul') do if not defined {var} set "{var}=%%V"
if not defined {var} (set {reg}=& set "%~3="& exit /b) else if %2=="" set "{var}=%{var}:*)    =%"& rem AveYo: v3
if not defined {var} (set {reg}=& set "%~3="& exit /b) else set {reg}=& set "%~3=%{var}:*)    =%"& set {var}=& exit /b

:dec_url brute url percent decoding by AveYo
set ".=%URL:!=}%"&setlocal enabledelayedexpansion& rem brute url percent decoding
set ".=!.:%%={!" &set ".=!.:{3A=:!" &set ".=!.:{2F=/!" &set ".=!.:{3F=?!" &set ".=!.:{23=#!" &set ".=!.:{5B=[!" &set ".=!.:{5D=]!"
set ".=!.:{40=@!"&set ".=!.:{21=}!" &set ".=!.:{24=$!" &set ".=!.:{26=&!" &set ".=!.:{27='!" &set ".=!.:{28=(!" &set ".=!.:{29=)!"
set ".=!.:{2A=*!"&set ".=!.:{2B=+!" &set ".=!.:{2C=,!" &set ".=!.:{3B=;!" &set ".=!.:{3D==!" &set ".=!.:{25=%%!"&set ".=!.:{20= !"
set ".=!.:{=%%!" &rem set ",=!.:%%=!" & if "!,!" neq "!.!" endlocal& set "URL=%.:}=!%" & call :dec_url
endlocal& set "URL=%.:}=!%" & exit /b
rem done

$@
[io.file]::WriteAllText("$DIR\OpenWebSearch.cmd", $OpenWebSearch)

## 8 done
$done = gp 'Registry::HKEY_Users\S-1-5-21*\Volatile*' Edge_Removal -ea 0; if ($done) {rp $done.PSPath Edge_Removal -force -ea 0}
if ((get-process -name 'explorer' -ea 0) -eq $null) {start explorer}

## 9 bonus enter into powershell console: firefox / edge / webview to install a browser / reinstall edge or webview after removal
${.} = [char]27; $firefox = "${.}[38;2;255;165;0m firefox"; $edge = "${.}[94m edge${.}[97m"; $webview = "${.}[94mwebview ${.}[97m"
write-host "`n${.}[40;32m EDGE REMOVED! ${.}[97m -GET-ANOTHER-BROWSER? ENTER:$firefox ${.}[97m -REINSTALL? ENTER:$edge / $webview"

## 0 ask to run script as admin
'@.replace("$@","'@").replace("@$","@'") -force -ea 0; $code='gp ''Registry::HKEY_Users\S-1-5-21*\Volatile*'' Edge_Removal -ea 0'
start powershell -args "-nop -noe -c & {iex(($code)[0].Edge_Removal)}" -verb runas
$_Press_Enter
#::]]>
	</File>
  <!--Browser Downloader-->
  <File path="C:\Windows\Setup\Scripts\Browser_Downloader.bat">
            <![CDATA[
@echo off
title Open ToolBox

mode con: cols=125 lines=36

:: Check for administrative privileges
powershell -Command "if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] 'Administrator')) { exit 1 }"
if '%errorlevel%' NEQ '0' (
    echo Requesting administrative privileges...
    goto UACPrompt
) else ( goto gotAdmin )

:UACPrompt
    echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\getadmin.vbs"
    echo UAC.ShellExecute "cmd.exe", "/c ""%~s0""", "", "runas", 1 >> "%temp%\getadmin.vbs"
    "%temp%\getadmin.vbs"
    del "%temp%\getadmin.vbs"
    exit /B

:gotAdmin
    pushd "%CD%"
    CD /D "%~dp0"

cls
wmic /? >nul 2>&1
if %errorlevel% neq 0 (
    echo [31mFirst start configuration don't close the application[0m
    DISM /Online /Add-Capability /CapabilityName:WMIC~~~~
) else (
    echo.
)
cls

cls
set "TPMX=TPM: [33mNONE "
for /f "tokens=11 delims=," %%i in ('wmic /namespace:\\root\cimv2\security\microsofttpm path win32_tpm get * /format:csv 2^> nul') do set TPMVER=%%i
for /f %%i in ('wmic /namespace:\\root\cimv2\security\microsofttpm path win32_tpm get * 2^>nul ^| find "TRUE"') do set "TPMX=TPM: [33mTRUE / %TPMVER% [0m" || set "TPMX=TPM: [33mNONE "
for /f "tokens=2" %%i in ('wmic os get caption') do set VERSION1=%%i
for /f "tokens=3" %%i in ('wmic os get caption') do set VERSION2=%%i
for /f "tokens=4" %%i in ('wmic os get caption') do set VERSION3=%%i
reg Query "HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\.NETFramework" | find /i "0x0" > NUL && set "FNETFX4=DISABLE" || set "FNETFX4=ENABLE"
FOR /F "tokens=2*" %%A IN ('REG QUERY "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v DisplayVersion 2^> nul') DO SET "CODENAME= %%B "
FOR /F "skip=2 tokens=2,*" %%A IN ('reg.exe query "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v "ReleaseId"') DO set "DFMT7= %%B "
FOR /F "skip=2 tokens=2,*" %%A IN ('reg.exe query "HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v "CurrentBuild"') DO set "DFMT5= %%B"
FOR /F "tokens=2*" %%a in ('Reg Query "HKLM\Software\Microsoft\Windows NT\CurrentVersion" /v UBR') do set "UBRHEX=%%~b"
set /a UBRDEC=%UBRHEX%
for /f "tokens=3 delims=()" %%a in ('wmic timezone get caption /value') do set tzone1=%%a
for /f "tokens=2 delims=()" %%a in ('wmic timezone get caption /value') do set tzone2=%%a
cls

if "%PROCESSOR_ARCHITECTURE%"=="AMD64" (set "OSARC= 64bit ")
if "%PROCESSOR_ARCHITECTURE%"=="x86" (set "OSARC= 32bit ")


set "downloadDir=%USERPROFILE%\Downloads"

if "%PROCESSOR_ARCHITECTURE%"=="AMD64" (
    set "arch=64"
) else (
    set "arch=32"
)

:menu
cls
echo =====================================================================================================================
echo USER: [33m%USERNAME%[0m ^| COMPUTERNAME: [33m%COMPUTERNAME%[0m ^| NETFX4: [33m%FNETFX4%[0m ^| %TPMX%
echo CURRENT OS: [104m[37m %VERSION1% %VERSION2% %VERSION3% [0m[41m[37m%DFMT7%[0m[42m%CODENAME%[0m[44m%DFMT5%.%UBRDEC% [0m[45m%OSARC%[0m
echo TIME ZONE: [31m%tzone2%[0m ^| [31m%tzone1%[0m
echo =====================================================================================================================
echo.
echo [94mTWEAK ^| FIXED ^| CLEANER ^| OTHER                                Software[0m 
echo [33m-------------------------------                                --------
echo [94m[1] [37m^|[0m Action Center ^& Notification ^| Cortana ^| Printer         [94m[19] [37m^|[0m Microsoft Edge             
echo [94m[2] [37m^|[0m Clear Event Viewer Logs                                  [94m[20] [37m^|[0m Brave
echo [94m[3] [37m^|[0m Clear Cache Updates ^| Delivery Optimization              [94m[21] [37m^|[0m Firefox
echo [94m[4] [37m^|[0m Microsoft Activation                                     [94m[22] [37m^|[0m Google Chrome
echo [94m[5] [37m^|[0m Hibernation ^| Fastboot ^| Sleepmode ^| Sysmain             [94m[23] [37m^|[0m Opera
echo [94m[6] [37m^|[0m Pagefile (virtual memory)                                [94m[24] [37m^|[0m DuckDuckGo
echo [94m[7] [37m^|[0m Right click Take Ownership Menu                          [94m[25] [37m^|[0m Librewolf
echo [94m[8] [37m^|[0m Stops Windows Updates until 2077                         [94m[26] [37m^|[0m 7-Zip 24.07
echo [94m[9] [37m^|[0m Compact ^| LZX compression                                [94m[27] [37m^|[0m VLC        
echo.
echo [94mUWP APPX ^| OTHER                                               OTHER ^| ETC
echo [33m----------------                                               -----------
echo [94m[10] [37m^|[0m Microsoft Store                                         [94m[28][0m ^| Microsoft Disk Benchmark
echo [94m[11][0m ^| Microsoft Xbox Game Bar                                 [94m[29][0m ^| Personalization
echo [94m[12][0m ^| Microsoft .NET Framework                                [94m[30][0m ^| Game Client - Steam/GOG/Origin/Epic/Ubisoft/Battle
echo [94m[13][0m ^| Microsoft OneDrive                                      
echo [94m[14][0m ^| Microsoft Music                                         
echo [94m[15][0m ^| Microsoft Movies ^& TV                                   
echo [94m[16][0m ^| Options For Windows 11                                  
echo.
echo [94mHighly recommended to install[0m
echo [33m-----------------------------[0m
echo [94m[17][0m ^| Visual C++ Redistributables AIO (system)
echo [94m[18][0m ^| DirectX (system)
echo.
echo [94m[0] [37m^|[0m Exit[0m
echo.
set /p choice=[0mEnter your choice (0-30):[0m

if "%choice%"=="1" goto actionandnoti
if "%choice%"=="2" goto op2
if "%choice%"=="3" goto op3
if "%choice%"=="4" goto op4
if "%choice%"=="5" goto op5
if "%choice%"=="6" goto op6
if "%choice%"=="7" goto op7
if "%choice%"=="8" goto op8
if "%choice%"=="9" goto op9
if "%choice%"=="10" goto op10
if "%choice%"=="11" goto op11
if "%choice%"=="12" goto netframework
if "%choice%"=="13" goto onedrive0
if "%choice%"=="14" goto zunemusic
if "%choice%"=="15" goto movie
if "%choice%"=="16" goto opwin11
if "%choice%"=="17" goto op16
if "%choice%"=="18" goto op17
if "%choice%"=="19" goto edge
if "%choice%"=="20" goto brave
if "%choice%"=="21" goto firefox
if "%choice%"=="22" goto chrome
if "%choice%"=="23" goto opera
if "%choice%"=="24" goto duckduckgo
if "%choice%"=="25" goto librewolf
if "%choice%"=="26" goto 7zip
if "%choice%"=="27" goto vlc
if "%choice%"=="28" goto opdisk
if "%choice%"=="29" goto pers
if "%choice%"=="30" goto gameclient
if "%choice%"=="forwindows11" goto forwindows11
if "%choice%"=="0" exit

cls
echo [31mInvalid option. Please select a number between 0 and 38.[0m
timeout /t 2 >nul
cls
goto menu

:edge
cls
call :download "Microsoft Edge" "MicrosoftEdgeSetup.exe" "https://go.microsoft.com/fwlink/?linkid=2109047&Channel=Stable&language=en&consent=1" "/silent /install"
goto end

:brave
cls
if "%arch%"=="64" (
    set "url=https://github.com/brave/brave-browser/releases/download/v1.67.123/BraveBrowserStandaloneSetup.exe"
    set "fileName=BraveBrowserSetup64.exe"
) else (
    set "url=https://github.com/brave/brave-browser/releases/download/v1.67.123/BraveBrowserStandaloneSetup32.exe"
    set "fileName=BraveBrowserSetup32.exe"
)
call :download "Brave" "%fileName%" "%url%" "/silent /install"
goto end

:firefox
cls
call :download "Firefox" "FirefoxSetup.exe" "https://download.mozilla.org/?product=firefox-latest&os=win&lang=en-US&arch=%arch%" "/silent /install"
goto end

:chrome
cls
if "%arch%"=="64" (
    set "url=https://dl.google.com/chrome/install/googlechromestandaloneenterprise64.msi"
    set "fileName=GoogleChromeStandaloneEnterprise64.msi"
) else (
    set "url=https://dl.google.com/chrome/install/googlechromestandaloneenterprise.msi"
    set "fileName=GoogleChromeStandaloneEnterprise.msi"
)
call :download "Google Chrome" "%fileName%" "%url%" "/quiet"
goto end

:opera
cls
if "%arch%"=="64" (
    set "url=https://download3.operacdn.com/pub/opera/desktop/76.0.4017.177/win/Opera_76.0.4017.177_Setup_x64.exe"
    set "fileName=OperaSetup_x64.exe"
) else (
    set "url=https://download3.operacdn.com/pub/opera/desktop/76.0.4017.177/win/Opera_76.0.4017.177_Setup.exe"
    set "fileName=OperaSetup.exe"
)
call :download "Opera" "%fileName%" "%url%" "/silent /install"
goto end

:duckduckgo
cls
set "browserName=DuckDuckGo"
set "fileName=DuckDuckGo.msixbundle"
set "url=https://staticcdn.duckduckgo.com/windows-desktop-browser/help-pages/DuckDuckGo.msixbundle"
set "frameworkUrl=https://aka.ms/Microsoft.VCLibs.x64.14.00.Desktop.appx"

:: Check if the framework is already installed
powershell -Command "Get-AppxPackage -Name 'Microsoft.VCLibs.x64.14.00' -ErrorAction SilentlyContinue" >nul 2>&1
if %errorlevel% neq 0 (
    curl -L -o "%downloadDir%\Microsoft.VCLibs.x64.14.00.Desktop.appx" "%frameworkUrl%"
    if %errorlevel% neq 0 (
        echo [31mError downloading framework. Exiting.[0m
        exit /B 1
    )
    powershell -Command "Add-AppxPackage -Path '%downloadDir%\Microsoft.VCLibs.x64.14.00.Desktop.appx'"
    if %errorlevel% neq 0 (
        echo Error installing framework. Exiting.
        exit /B 1
    )
)

echo [0m=====================================================================================================================
echo [32mInstalling %browserName%...[0m
echo =====================================================================================================================
curl -L -o "%downloadDir%\%fileName%" "%url%"
if %errorlevel% neq 0 (
    echo [31mError downloading %browserName%. Exiting.[0m
    exit /B 1
)

powershell -Command "Add-AppxPackage -Path '%downloadDir%\%fileName%'"
if %errorlevel% neq 0 (
    echo Error installing %browserName%. Exiting.
    exit /B 1
)

echo %browserName% has been installed.
goto menu

:librewolf
cls
call :download "Librewolf" "LibrewolfSetup.exe" "https://gitlab.com/api/v4/projects/44042130/packages/generic/librewolf/127.0.2-2/librewolf-127.0.2-2-windows-x86_64-setup.exe" "/S"
goto end

:exit
exit /B

:download
set "browserName=%~1"
set "fileName=%~2"
set "url=%~3"
set "silentArgs=%~4"

echo =====================================================================================================================
echo [32mInstalling %browserName%...[0m
echo =====================================================================================================================
curl -L -o "%downloadDir%\%fileName%" "%url%"
if %errorlevel% neq 0 (
    echo Error downloading %browserName%. Exiting.
    exit /B 1
)
start /wait "" "%downloadDir%\%fileName%" %silentArgs%
if %errorlevel% neq 0 (
    echo [31mError installing %browserName%. Exiting.[0m
    exit /B 1
)

:: Check if the browser is installed
set "checkCommand="
if "%browserName%"=="Microsoft Edge" (
    set "checkCommand=msedge"
) else if "%browserName%"=="Brave" (
    set "checkCommand=brave"
) else if "%browserName%"=="Firefox" (
    set "checkCommand=firefox"
) else if "%browserName%"=="Google Chrome" (
    set "checkCommand=chrome"
) else if "%browserName%"=="Opera" (
    set "checkCommand=opera"
) else if "%browserName%"=="DuckDuckGo" (
    set "checkCommand=duckduckgo"
) else if "%browserName%"=="Librewolf" (
    set "checkCommand=librewolf"
)

if not "%checkCommand%"=="" (
    powershell -Command "Get-Command '%checkCommand%' -ErrorAction SilentlyContinue" >nul 2>&1
    if %errorlevel% neq 0 (
        echo %browserName% installation failed. Exiting.
        exit /B 1
    )
    echo %browserName% has been installed.
) else (
    echo Could not verify the installation of %browserName%.
)

goto menu

:actionandnoti
cls
echo [0m=====================================================================================================================
echo [32mAction Center and Notification[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Enable
echo [32m[2][0m ^| Disable
echo ---------------------------------------------------------------------------------------------------------------------
echo [32mPrint Spooler for Printer (services)[0m                 
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[3][0m ^| Enable ^| Service Auto
echo [32m[4][0m ^| Disable ^| Service Manual
echo ---------------------------------------------------------------------------------------------------------------------
echo [32mWindows Hello (Biometrics)[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[5][0m ^| Enable
echo [32m[6][0m ^| Disable
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu
echo.


set /p op=Type option:
if "%op%"=="1" goto op01
if "%op%"=="2" goto op02
if "%op%"=="3" sc config Spooler start=auto && net start Spooler && echo Print Spooler is enabled. && timeout /t 2 >nul && goto actionandnoti
if "%op%"=="4" sc config Spooler start=demand && net stop Spooler && echo Print Spooler is disabled. && timeout /t 2 >nul && goto actionandnoti
if "%op%"=="5" goto biomet1
if "%op%"=="6" goto biomet2
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 6.[0m
timeout /t 2 >nul
cls
goto actionandnoti

:op01
cls
color 0b
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="14393" (
REG ADD "HKLM\SOFTWARE\Microsoft\Windows\Windows Error Reporting" /v "Disabled" /t REG_DWORD /d "0" /f
REG ADD "HKCU\Software\Policies\Microsoft\Windows\Windows Error Reporting" /v "Disabled" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windows Error Reporting" /v "Disabled" /t REG_DWORD /d "0" /f
REG ADD "HKCU\Software\Microsoft\Windows\CurrentVersion\PushNotifications" /v "ToastEnabled" /t REG_DWORD /d "1" /f
REG ADD "HKCU\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v "DisableNotificationCenter" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v "DisableNotificationCenter" /t REG_DWORD /d "0" /f
REG ADD "HKCU\Software\Microsoft\Windows\CurrentVersion\PushNotifications" /v "ToastEnabled" /t REG_DWORD /d "1" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WerSvc" /v "Start" /t REG_DWORD /d "3" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnService" /v "Start" /t REG_DWORD /d "3" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnUserService" /v "Start" /t REG_DWORD /d "2" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\SENS" /v "Start" /t REG_DWORD /d "2" /f
REG ADD "HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Explorer" /v "DisableNotificationCenter" /t REG_DWORD /d "0" /f
cls
echo [31mRestart the computer for the changes to take effect 1607.[0m
timeout /t 5 >nul
cls
goto actionandnoti
)
REG ADD "HKCU\Software\Microsoft\Windows\CurrentVersion\PushNotifications" /v "ToastEnabled" /t REG_DWORD /d "1" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WerSvc" /v "Start" /t REG_DWORD /d "3" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnService" /v "Start" /t REG_DWORD /d "3" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnUserService" /v "Start" /t REG_DWORD /d "2" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnUserService_3c549" /v "Start" /t REG_DWORD /d "2" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\SENS" /v "Start" /t REG_DWORD /d "2" /f
REG ADD "HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Explorer" /v "DisableNotificationCenter" /t REG_DWORD /d "0" /f
timeout /t 1 >nul
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
cls
goto actionandnoti

:op02
cls
color 0E
color 0b
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="14393" (
REG ADD "HKLM\SOFTWARE\Microsoft\Windows\Windows Error Reporting" /v "Disabled" /t REG_DWORD /d "1" /f
REG ADD "HKCU\Software\Policies\Microsoft\Windows\Windows Error Reporting" /v "Disabled" /t REG_DWORD /d "1" /f
REG ADD "HKLM\SOFTWARE\Policies\Microsoft\Windows\Windows Error Reporting" /v "Disabled" /t REG_DWORD /d "1" /f
REG ADD "HKCU\Software\Microsoft\Windows\CurrentVersion\PushNotifications" /v "ToastEnabled" /t REG_DWORD /d "0" /f
REG ADD "HKCU\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v "DisableNotificationCenter" /t REG_DWORD /d "1" /f
REG ADD "HKLM\SOFTWARE\Policies\Microsoft\Windows\Explorer" /v "DisableNotificationCenter" /t REG_DWORD /d "1" /f
REG ADD "HKCU\Software\Microsoft\Windows\CurrentVersion\PushNotifications" /v "ToastEnabled" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WerSvc" /v "Start" /t REG_DWORD /d "3" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnService" /v "Start" /t REG_DWORD /d "4" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnUserService" /v "Start" /t REG_DWORD /d "2" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnUserService_3c549" /v "Start" /t REG_DWORD /d "2" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\SENS" /v "Start" /t REG_DWORD /d "4" /f
REG ADD "HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Explorer" /v "DisableNotificationCenter" /t REG_DWORD /d "1" /f
cls
echo [31mRestart the computer for the changes to take effect 1607.[0m
timeout /t 5 >nul
cls
goto actionandnoti
)
REG ADD "HKCU\Software\Microsoft\Windows\CurrentVersion\PushNotifications" /v "ToastEnabled" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WerSvc" /v "Start" /t REG_DWORD /d "3" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnService" /v "Start" /t REG_DWORD /d "4" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnUserService" /v "Start" /t REG_DWORD /d "2" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WpnUserService_3c549" /v "Start" /t REG_DWORD /d "2" /f
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\SENS" /v "Start" /t REG_DWORD /d "4" /f
REG ADD "HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Explorer" /v "DisableNotificationCenter" /t REG_DWORD /d "1" /f
timeout /t 1 >nul
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
cls
goto actionandnoti

:biomet1
cls
REG ADD "HKLM\SOFTWARE\Policies\Microsoft\Biometrics" /v "Enabled" /t REG_DWORD /d 1 /f >nul
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WbioSrvc" /v "Start" /t REG_DWORD /d "2" /f >nul
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 1 >nul
goto actionandnoti

:biomet2
cls
REG ADD "HKLM\SOFTWARE\Policies\Microsoft\Biometrics" /v "Enabled" /t REG_DWORD /d 0 /f >nul
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\WbioSrvc" /v "Start" /t REG_DWORD /d "3" /f >nul
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 1 >nul
goto actionandnoti

:7zip
cls
@echo off
echo  =====================================================================================================================
echo  [32mInstalling 7-Zip...[0m
echo  =====================================================================================================================
timeout /t 1 >nul
if "%PROCESSOR_ARCHITECTURE%"=="AMD64" goto 7zip64
if "%PROCESSOR_ARCHITECTURE%"=="x86" goto 7zip32

:7zip64
cls
curl -L -o "%downloadDir%\7z-x64.exe" "https://7-zip.org/a/7z2407-x64.exe"
cls
echo =====================================================================================================================
echo [32mInstalling 7-Zip x64...[0m
echo =====================================================================================================================
start /wait "" "%downloadDir%\7z-x64.exe" /S
timeout /t 2 >nul
cls
goto menu

:7zip32
cls
curl -L -o "%downloadDir%\7z-x86.exe" "https://7-zip.org/a/7z2407.exe"
cls
echo =====================================================================================================================
echo [32mInstalling 7-Zip x86...[0m
echo =====================================================================================================================
start /wait "" "%downloadDir%\7z-x86.exe" /S
timeout /t 2 >nul
cls
goto menu

:op2
cls
echo [0m=====================================================================================================================
echo [32mClear Event Viewer Logs[0m                                 
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Cleanup now               
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto op22
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 1.[0m
timeout /t 2 >nul
cls

:op22
cls
FOR /F "tokens=1,2*" %%V IN ('bcdedit') DO SET adminTest=%%V
IF (%adminTest%)==(Access) goto noAdmin
for /F "tokens=*" %%G in ('wevtutil.exe el') DO (call :do_clear "%%G")
cls

:do_clear
wevtutil.exe cl %1
echo All Event Logs have been cleared!
timeout /t 1 >nul
goto menu


:op3
color 0D
cls
echo [0m=====================================================================================================================
echo [32mCleanup Windows Store Cache and Delivery Optimization[0m  
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Cleanup now
echo =====================================================================================================================
echo.                                     
echo [32m[0][0m ^| Back to menu
echo.                                      

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto op33
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 1.[0m
timeout /t 2 >nul
cls
goto op3
cls

:op33
cls
echo [0m=====================================================================================================================
echo [32mDo Cleaning.[0m                                          
echo =====================================================================================================================
net stop DoSvc
timeout /t 5 >nul
cls
echo =====================================================================================================================
echo [32mDo Cleaning..[0m
echo =====================================================================================================================
takeown /f "%WINDIR%\ServiceProfiles\NetworkService\AppData\Local\Microsoft\Windows\DeliveryOptimization" /r /d y >nul 2>nul
timeout /t 5 >nul
cls
echo =====================================================================================================================
echo [32mDo Cleaning...[0m                                           
echo =====================================================================================================================
rd /Q /S  "%WINDIR%\SoftwareDistribution\Download\" >nul 2>nul
rd /Q /S  "%WINDIR%\ServiceProfiles\NetworkService\AppData\Local\Microsoft\Windows\DeliveryOptimization\Cache\" >nul 2>nul
timeout /t 5 >nul
cls
echo =====================================================================================================================
echo [32mDo Cleaning....[0m                                           
echo =====================================================================================================================
rd /Q /S "%WINDIR%\ServiceProfiles\NetworkService\AppData\Local\Microsoft\Windows\DeliveryOptimization\Cache\" >nul 2>nul
rd /Q /S "%WINDIR%\ServiceProfiles\NetworkService\AppData\Local\Microsoft\Windows\DeliveryOptimization\Logs\" >nul 2>nul
rd /Q /S "%WINDIR%\ServiceProfiles\NetworkService\AppData\Local\Microsoft\Windows\DeliveryOptimization\State\" >nul 2>nul
del /q /f /s "%TEMP%\*"
timeout /t 5 >nul
cls
echo =====================================================================================================================
echo [32mDo Cleaning.....[0m                                               
echo =====================================================================================================================
mkdir "%WINDIR%\ServiceProfiles\NetworkService\AppData\Local\Microsoft\Windows\DeliveryOptimization\Cache" >nul 2>nul
mkdir "%WINDIR%\ServiceProfiles\NetworkService\AppData\Local\Microsoft\Windows\DeliveryOptimization\Logs" >nul 2>nul
mkdir "%WINDIR%\ServiceProfiles\NetworkService\AppData\Local\Microsoft\Windows\DeliveryOptimization\State" >nul 2>nul
mkdir "%WINDIR%\SoftwareDistribution\Download\" >nul 2>nul
timeout /t 5 >nul
cls
echo =====================================================================================================================
echo [32mDo Cleaning......[0m  
echo =====================================================================================================================
sc config DoSvc "start=" "delayed-auto" >nul 2>nul
timeout /t 5 >nul
cls
echo =====================================================================================================================
echo [31mWindows Store Cache Updates ^/ Delivery Optimization have been cleared![0m
echo =====================================================================================================================
net start DoSvc >nul 2>nul
timeout /t 5 >nul
cls
goto menu

:op4
cls
set "scriptUrl=https://raw.githubusercontent.com/massgravel/Microsoft-Activation-Scripts/master/MAS/All-In-One-Version/MAS_AIO-CRC32_31F7FD1E.cmd"
set "scriptName=MAS_AIO-CRC32_31F7FD1E.cmd"

:: Download the script
curl -L -o "%downloadDir%\%scriptName%" "%scriptUrl%"
if %errorlevel% neq 0 (
    echo Error downloading the script. Exiting.
    exit /B 1
)

:: Execute the downloaded script
call "%downloadDir%\%scriptName%"
goto menu

:op5
cls
echo [0m=====================================================================================================================
echo [32mHibernation / Fastboot / Sleep mode[0m                      
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Disable : hiberfil.sys[0m                               
echo [32m[2][0m ^| Enable  : hiberfil.sys[0m                                                            
echo ---------------------------------------------------------------------------------------------------------------------
echo [32mSysmain / Superfetch[0m                                   
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[3][0m ^| Disable : Sysmain ^/ Superfetch[0m                       
echo [32m[4][0m ^| Enable  : Sysmain ^/ Superfetch[0m                      
echo ---------------------------------------------------------------------------------------------------------------------
echo [31mNOTE: for laptops users can enable hibernation if you want to using sleepmode/standby mode.
echo [31mNOTE: for HDD users enable Sysmain and hibernation for better boot up times and application.
echo [31mNOTE: A computer with 4GB of RAM would have a 3.5GB hiberfil.sys file on your Drives.[0m
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto op55
if "%op%"=="2" goto op56
if "%op%"=="3" goto super1
if "%op%"=="4" goto super2
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 4.[0m
timeout /t 2 >nul
cls

goto op5
:op55
powercfg.exe /h off
powercfg.exe /hibernate off
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
goto op5
:op56
powercfg.exe /h on
powercfg.exe /hibernate on
timeout /t 5 >nul
powercfg /h /type full
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
goto op5
:super2
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\Sysmain" /v "Start" /t REG_DWORD /d "2" /f
net start Sysmain
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
goto op5
:super1
REG ADD "HKLM\SYSTEM\CurrentControlSet\Services\Sysmain" /v "Start" /t REG_DWORD /d "4" /f
net stop Sysmain
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
goto op5
echo off

:op6
cls
echo [0m=====================================================================================================================
echo [32mPaging file (virtual memory)[0m                             
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Disable : Pagefile.sys[0m                               
echo [32m[2][0m ^| Enable  : Pagefile.sys [set to 256MB][0m                
echo [32m[3][0m ^| Enable  : Pagefile.sys [set to 3.0GB] [0m               
echo [32m[4][0m ^| Enable  : Pagefile.sys [set to 4.0GB] [0m               
echo [32m[5][0m ^| Enable  : Pagefile.sys [set to 8.0GB][0m                
echo [32m[6][0m ^| Enable  : Pagefile.sys [set to 16.0GB] [0m              
echo [32m[7][0m ^| Enable  : Pagefile.sys [Default System managed][0m      
echo ---------------------------------------------------------------------------------------------------------------------
echo [31mNOTE: Default System managed ex. 4GB of ram Pagefile.sys be using 4GB of size on your drives.[0m
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu                                   
echo.

timeout /t 2 >nul
set /p op=Type option:
if "%op%"=="1" goto m1
if "%op%"=="2" goto m2
if "%op%"=="3" goto m3
if "%op%"=="4" goto m4
if "%op%"=="5" goto m5
if "%op%"=="6" goto m6
if "%op%"=="7" goto m7
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 7.[0m
timeout /t 2 >nul
cls
goto op6

:m1
REG add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "PagingFiles" /t REG_MULTI_SZ /d "C:\pagefile.sys 1 1" /f
Reg Add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "ClearPageFileAtShutdown" /t REG_DWORD /d 0 /f
wmic pagefileset where name="C:\\pagefile.sys" delete
cls
echo [31mRestart the computer for the changes to take effect.[0m.
timeout /t 5 >nul
cls
goto menu

:m2
Reg Add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "ClearPageFileAtShutdown" /t REG_DWORD /d 0 /f
REG add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "PagingFiles" /t REG_MULTI_SZ /d "C:\pagefile.sys 256 256" /f
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
cls
goto menu

:m3
Reg Add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "ClearPageFileAtShutdown" /t REG_DWORD /d 0 /f
REG add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "PagingFiles" /t REG_MULTI_SZ /d "C:\pagefile.sys 3000 3000" /f
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
cls
goto menu

:m4
Reg Add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "ClearPageFileAtShutdown" /t REG_DWORD /d 0 /f
REG add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "PagingFiles" /t REG_MULTI_SZ /d "C:\pagefile.sys 4000 4000" /f
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
cls
goto menu

:m5
Reg Add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "ClearPageFileAtShutdown" /t REG_DWORD /d 0 /f
REG add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "PagingFiles" /t REG_MULTI_SZ /d "C:\pagefile.sys 8000 8000" /f
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
cls
goto menu

:m6
Reg Add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "ClearPageFileAtShutdown" /t REG_DWORD /d 0 /f
REG add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "PagingFiles" /t REG_MULTI_SZ /d "C:\pagefile.sys 16000 16000" /f
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
cls
goto menu

:m7
Reg Add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "ClearPageFileAtShutdown" /t REG_DWORD /d 0 /f
REG add "HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Memory Management" /v "PagingFiles" /t REG_MULTI_SZ /d "C:\pagefile.sys 0 0" /f
cls
echo [31mRestart the computer for the changes to take effect.[0m
timeout /t 5 >nul
cls
goto menu
echo off

:op7
cls
echo [0m=====================================================================================================================
echo [32mRight click Take Ownership Menu[0m                          
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Add                                                  
echo [32m[2][0m ^| Removed                                                                                     
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu  
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto op77
if "%op%"=="2" goto op78
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 2.[0m
timeout /t 2 >nul
cls
goto op7

:op77
cls
:: Add "Take Ownership" to context menu for files
Reg add "HKCR\*\shell\Take Ownership" /ve /t REG_SZ /d "Take Ownership" /f
Reg add "HKCR\*\shell\Take Ownership\command" /ve /t REG_SZ /d "cmd.exe /c takeown /f \"%%1\" && icacls \"%%1\" /grant administrators:F" /f
:: Add "Take Ownership" to context menu for directories
Reg add "HKCR\Directory\shell\Take Ownership" /ve /t REG_SZ /d "Take Ownership" /f
Reg add "HKCR\Directory\shell\Take Ownership\command" /ve /t REG_SZ /d "cmd.exe /c takeown /f \"%%1\" /r /d y && icacls \"%%1\" /grant administrators:F /t" /f
timeout /t 2 >nul
cls
goto op7

:op78
cls
:: Remove "Take Ownership" from context menu for files
Reg delete "HKCR\*\shell\Take Ownership" /f
:: Remove "Take Ownership" from context menu for directories
Reg delete "HKCR\Directory\shell\Take Ownership" /f
timeout /t 2 >nul
cls
goto op7

:op8
cls
echo [0m=====================================================================================================================
echo [32mStops Windows Updates until 2077 (for version 1703 or higher version)[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Pause Windows Update until 2077                     
echo ---------------------------------------------------------------------------------------------------------------------
echo [31mNOTE: This only to stop Windows Update (Cumulative update), [33mDrivers[0m/[33mMS Store[0m/[33mDefenders[0m [31mUpdate will works as normal.[0m
echo [31mNOTE: To Pause in Windows 11 ^> Click ^> Windows Update ^> Click Pause and press 1 to Pause until 2077.[0m
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu
echo. 

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto pauseupdate1
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 1.[0m
timeout /t 2 >nul
cls
goto op8

:pauseupdate1
cls
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UpdatePolicy\Settings" /v "PausedFeatureStatus" /t REG_DWORD /d "1" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UpdatePolicy\Settings" /v "PausedQualityStatus" /t REG_DWORD /d "1" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX" /v "IsConvergedUpdateStackEnabled" /t REG_DWORD /d "1" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "ActiveHoursEnd" /t REG_DWORD /d "17" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "ActiveHoursStart" /t REG_DWORD /d "8" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "AllowAutoWindowsUpdateDownloadOverMeteredNetwork" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "DeferFeatureUpdatesPeriodInDays" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "DeferQualityUpdatesPeriodInDays" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "ExcludeWUDriversInQualityUpdate" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "FlightCommitted" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "LastToastAction" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "UxOption" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "InsiderProgramEnabled" /t REG_DWORD /d "0" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "PendingRebootStartTime" /t REG_SZ /d "2019-07-28T03:07:38Z" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "PauseFeatureUpdatesStartTime" /t REG_SZ /d "2019-07-28T10:38:56Z" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "PauseQualityUpdatesStartTime" /t REG_SZ /d "2019-07-28T10:38:56Z" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "PauseUpdatesExpiryTime" /t REG_SZ /d "2077-01-01T10:38:56Z" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "PauseFeatureUpdatesEndTime" /t REG_SZ /d "2077-01-01T10:38:56Z" /f
REG ADD "HKLM\SOFTWARE\Microsoft\WindowsUpdate\UX\Settings" /v "PauseQualityUpdatesEndTime" /t REG_SZ /d "2077-01-01T10:38:56Z" /f

cls
echo [31mYour Windows Update is now paused until 2077!!!!!![0m
timeout /t 4 >nul
goto op8

:op9
cls
echo [0m=====================================================================================================================
echo [32mCOMPACT OS LZX (for SSD/NvME)[0m                           
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| COMPACT OS LZX [LZMS]                                
echo [32m[2][0m ^| COMPACT OS NORMAL
echo ---------------------------------------------------------------------------------------------------------------------                                    
echo [31mNOTE: HDD Highly Not recommended to Use LZX [0m     
echo ---------------------------------------------------------------------------------------------------------------------
echo Folder and files that will be compressed                      
echo [33m"C:\Program Files"[0m                                       
echo [33m"C:\Program Files (x86)"[0m                                 
echo [33m"C:\ProgramData"[0m                                         
echo [33m"C:\Users"[0m                                               
echo [33m"C:\Windows"[0m                                             
echo ---------------------------------------------------------------------------------------------------------------------
echo [31mNOTE: it take 5min~10min on SSD to finish (HDD 30m~1h)[0m   
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu
echo.                                         

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto co1
if "%op%"=="2" goto co2
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 2.[0m
timeout /t 2 >nul
cls
goto op9

:co1
cls
echo [31mPlease, Don't Touch Anything while compressing in progress.[0m
timeout /t 8 >nul
cls
cd "C:\Windows"
compact /c /s /a /f /q /i /exe:LZX
timeout /t 5 >nul
cls
echo [31mCompression is complete! Restart the computer for the changes to take effect.
timeout /t 8 >nul
cls
cls
goto menu

:co2
cls
color 0b
echo [31mPlease, Don't Touch Anything while compressing in progress.[0m
timeout /t 8 >nul
cls
Compact.exe /CompactOS:always
timeout /t 3 >nul
cls
echo [31mCompression is complete! Restart the computer for the changes to take effect.[0m
timeout /t 8 >nul
cls
goto menu

:op10
cls
echo [0m=====================================================================================================================
echo [32mMicrosoft Store[0m        
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m  ^| Install Microsoft Store
echo [32m[2][0m  ^| Remove Microsoft Store                                                       
echo =====================================================================================================================
echo.
echo [32m[0][0m  ^| Back to menu  
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto store1
if "%op%"=="2" goto store2
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 2.[0m
timeout /t 2 >nul
cls
goto op10

:store1
set "downloadDir=%USERPROFILE%\Downloads"
setlocal enableextensions
if /i "%PROCESSOR_ARCHITECTURE%" equ "AMD64" (set "arch=x64") else (set "arch=x86")
cd /d "%~dp0"

::Download files
curl -L -o "%downloadDir%\Microsoft.DesktopAppInstaller_1.6.29000.1000_neutral_~_8wekyb3d8bbwe.AppxBundle"  "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.DesktopAppInstaller_1.6.29000.1000_neutral_~_8wekyb3d8bbwe.AppxBundle"
curl -L -o "%downloadDir%\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.xml" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/Appx/Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.xml"
curl -L -o "%downloadDir%\Microsoft.NET.Native.Framework.1.6_1.6.24903.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.NET.Native.Framework.1.6_1.6.24903.0_x64__8wekyb3d8bbwe.Appx"
curl -L -o "%downloadDir%\Microsoft.NET.Native.Framework.1.6_1.6.24903.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.NET.Native.Framework.1.6_1.6.24903.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "%downloadDir%\Microsoft.NET.Native.Runtime.1.6_1.6.24903.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.NET.Native.Runtime.1.6_1.6.24903.0_x64__8wekyb3d8bbwe.Appx"
curl -L -o "%downloadDir%\Microsoft.NET.Native.Runtime.1.6_1.6.24903.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.NET.Native.Runtime.1.6_1.6.24903.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "%downloadDir%\Microsoft.StorePurchaseApp_11808.1001.413.0_neutral_~_8wekyb3d8bbwe.AppxBundle" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.StorePurchaseApp_11808.1001.413.0_neutral_~_8wekyb3d8bbwe.AppxBundle"
curl -L -o "%downloadDir%\Microsoft.StorePurchaseApp_8wekyb3d8bbwe.xml" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/Appx/Microsoft.StorePurchaseApp_8wekyb3d8bbwe.xml"
curl -L -o "%downloadDir%\Microsoft.VCLibs.140.00_14.0.26706.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00_14.0.26706.0_x64__8wekyb3d8bbwe.Appx"
curl -L -o "%downloadDir%\Microsoft.VCLibs.140.00_14.0.26706.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00_14.0.26706.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "%downloadDir%\Microsoft.WindowsStore_11809.1001.713.0_neutral_~_8wekyb3d8bbwe.AppxBundle" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.WindowsStore_11809.1001.713.0_neutral_~_8wekyb3d8bbwe.AppxBundle"
curl -L -o "%downloadDir%\Microsoft.WindowsStore_8wekyb3d8bbwe.xml" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/Appx/Microsoft.WindowsStore_8wekyb3d8bbwe.xml"
curl -L -o "%downloadDir%\Microsoft.XboxIdentityProvider_12.45.6001.0_neutral_~_8wekyb3d8bbwe.AppxBundle" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.XboxIdentityProvider_12.45.6001.0_neutral_~_8wekyb3d8bbwe.AppxBundle"
curl -L -o "%downloadDir%\Microsoft.XboxIdentityProvider_8wekyb3d8bbwe.xml" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/Appx/Microsoft.XboxIdentityProvider_8wekyb3d8bbwe.xml"

for /f %%i in ('dir /b "%downloadDir%\*WindowsStore*.appxbundle" 2^>nul') do set "Store=%%i"
for /f %%i in ('dir /b "%downloadDir%\*NET.Native.Framework*1.6*.appx" 2^>nul ^| find /i "x64"') do set "Framework6X64=%%i"
for /f %%i in ('dir /b "%downloadDir%\*NET.Native.Framework*1.6*.appx" 2^nul ^| find /i "x86"') do set "Framework6X86=%%i"
for /f %%i in ('dir /b "%downloadDir%\*NET.Native.Runtime*1.6*.appx" 2^>nul ^| find /i "x64"') do set "Runtime6X64=%%i"
for /f %%i in ('dir /b "%downloadDir%\*NET.Native.Runtime*1.6*.appx" 2^>nul ^| find /i "x86"') do set "Runtime6X86=%%i"
for /f %%i in ('dir /b "%downloadDir%\*VCLibs*140*.appx" 2^>nul ^| find /i "x64"') do set "VCLibsX64=%%i"
for /f %%i in ('dir /b "%downloadDir%\*VCLibs*140*.appx" 2^>nul ^| find /i "x86"') do set "VCLibsX86=%%i"

if exist "%downloadDir%\*StorePurchaseApp*.appxbundle" if exist "%downloadDir%\*StorePurchaseApp*.xml" (
    for /f %%i in ('dir /b "%downloadDir%\*StorePurchaseApp*.appxbundle" 2^>nul') do set "PurchaseApp=%%i"
)
if exist "%downloadDir%\*DesktopAppInstaller*.appxbundle" if exist "%downloadDir%\*DesktopAppInstaller*.xml" (
    for /f %%i in ('dir /b "%downloadDir%\*DesktopAppInstaller*.appxbundle" 2^>nul') do set "AppInstaller=%%i"
)
if exist "%downloadDir%\*XboxIdentityProvider*.appxbundle" if exist "%downloadDir%\*XboxIdentityProvider*.xml" (
    for /f %%i in ('dir /b "%downloadDir%\*XboxIdentityProvider*.appxbundle" 2^>nul') do set "XboxIdentity=%%i"
)

if /i %arch%==x64 (
    set "DepStore=%VCLibsX64%,%VCLibsX86%,%Framework6X64%,%Framework6X86%,%Runtime6X64%,%Runtime6X86%"
    set "DepPurchase=%VCLibsX64%,%VCLibsX86%,%Framework6X64%,%Framework6X86%,%Runtime6X64%,%Runtime6X86%"
    set "DepXbox=%VCLibsX64%,%VCLibsX86%,%Framework6X64%,%Framework6X86%,%Runtime6X64%,%Runtime6X86%"
    set "DepInstaller=%VCLibsX64%,%VCLibsX86%"
) else (
    set "DepStore=%VCLibsX86%,%Framework6X86%,%Runtime6X86%"
    set "DepPurchase=%VCLibsX86%,%Framework6X86%,%Runtime6X86%"
    set "DepXbox=%VCLibsX86%,%Framework6X86%,%Runtime6X86%"
    set "DepInstaller=%VCLibsX86%"
)

set "PScommand=PowerShell -NoLogo -NoProfile -NonInteractive -InputFormat None -ExecutionPolicy Bypass"

cls
echo [0m=====================================================================================================================
echo [32mInstalling Microsoft Store..[0m
echo =====================================================================================================================
1>nul 2>nul %PScommand% Add-AppxProvisionedPackage -Online -PackagePath "%downloadDir%\%Store%" -DependencyPackagePath "%downloadDir%\%DepStore%" -LicensePath "%downloadDir%\Microsoft.WindowsStore_8wekyb3d8bbwe.xml"
for %%i in (%DepStore%) do (
    %PScommand% Add-AppxPackage -Path "%downloadDir%\%%i"
)
%PScommand% Add-AppxPackage -Path "%downloadDir%\%Store%"

if defined PurchaseApp (
cls
echo [0m=====================================================================================================================
echo [32mInstalling Microsoft Store....[0m
echo =====================================================================================================================
    1>nul 2>nul %PScommand% Add-AppxProvisionedPackage -Online -PackagePath "%downloadDir%\%PurchaseApp%" -DependencyPackagePath "%downloadDir%\%DepPurchase%" -LicensePath "%downloadDir%\Microsoft.StorePurchaseApp_8wekyb3d8bbwe.xml"
    %PScommand% Add-AppxPackage -Path "%downloadDir%\%PurchaseApp%"
)
if defined AppInstaller (
    cls
    echo [0m=====================================================================================================================
    echo [32mInstalling Microsoft Store......[0m
    echo =====================================================================================================================
    1>nul 2>nul %PScommand% Add-AppxProvisionedPackage -Online -PackagePath "%downloadDir%\%AppInstaller%" -DependencyPackagePath "%downloadDir%\%DepInstaller%" -LicensePath "%downloadDir%\Microsoft.DesktopAppInstaller_8wekyb3d8bbwe.xml"
    %PScommand% Add-AppxPackage -Path "%downloadDir%\%AppInstaller%"
)
if defined XboxIdentity (
    cls
    echo [0m=====================================================================================================================
    echo [32mInstalling Microsoft Store.........[0m
    echo =====================================================================================================================
    1>nul 2>nul %PScommand% Add-AppxProvisionedPackage -Online -PackagePath "%downloadDir%\%XboxIdentity%" -DependencyPackagePath "%downloadDir%\%DepXbox%" -LicensePath "%downloadDir%\Microsoft.XboxIdentityProvider_8wekyb3d8bbwe.xml"
    %PScommand% Add-AppxPackage -Path "%downloadDir%\%XboxIdentity%"
)
goto menu

:store2
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "remove-store.ps1" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/Remove-store.ps1" 
cls
powershell -ExecutionPolicy Bypass -File "remove-store.ps1"
cls
del /q /s "remove-store.ps1" >nul 2>nul
cls
echo [31mMicrosoft Store is completely removed.[0m
timeout /t 3 >nul
goto menu
cls
timeout /t 2 >nul
goto menu

:op11
cls
echo [0m=====================================================================================================================
echo [32mMicrosoft Xbox Game Bar[0m                               
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Download and Install                          
echo [32m[2][0m ^| Removed Xbox Game Bar                         
echo [32m[3][0m ^| Enable or Disable Xbox Game Bar                            
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu 
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto startdownload1
if "%op%"=="2" goto gamebar2
if "%op%"=="3" goto gamebar3
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 3.[0m
timeout /t 2 >nul
cls
goto op11

:startdownload1
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "Microsoft.XboxGamingOverlay_7.124.7102.0_neutral_~_8wekyb3d8bbwe.AppxBundle" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.XboxGamingOverlay_7.124.7102.0_neutral_~_8wekyb3d8bbwe.AppxBundle" 
curl -L -o "Microsoft.VCLibs.140.00_14.0.33519.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00_14.0.33519.0_x64__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.VCLibs.140.00_14.0.33519.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00_14.0.33519.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x64__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.UI.Xaml.2.7_7.2208.15002.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.UI.Xaml.2.7_7.2208.15002.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.UI.Xaml.2.7_7.2208.15002.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.UI.Xaml.2.7_7.2208.15002.0_x64__8wekyb3d8bbwe.Appx"
cls
goto :install

:install
cls
Reg add "HKCU\System\GameConfigStore" /v "GameDVR_Enabled" /t REG_DWORD /d "1" /f 2>nul
Reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\GameDVR" /v "AppCaptureEnabled" /t REG_DWORD /d "1" /f 2>nul
Reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\GameDVR" /v "GameDVR_Enabled" /t REG_DWORD /d "1" /f 2>nul
cls
reg Query "HKLM\Hardware\Description\System\CentralProcessor\0" | find /i "x86" > NUL && set "XGAMEBAR=x86" || set "XGAMEBAR==x64"
if "%XGAMEBAR=%"=="x64" goto :xboxgamebarx64
if "%XGAMEBAR=%"=="x86" goto :xboxgamebarx86
cls

:xboxgamebarx64
cls
echo [0m=====================================================================================================================
echo [32mInstalling Xbox Game Bar....[0m
echo =====================================================================================================================
cls
cd "%USERPROFILE%\Downloads"
cls
Powershell Add-AppxPackage -Path Microsoft.UI.Xaml.2.7_7.2208.15002.0_x64__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.UI.Xaml.2.7_7.2208.15002.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x64__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00_14.0.33519.0_x64__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00_14.0.33519.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.XboxGamingOverlay_7.124.7102.0_neutral_~_8wekyb3d8bbwe.AppxBundle
cls
net start BcastDVRUserService
cls
timeout /t 5 >nul
goto menu

:xboxgamebarx86
cls
echo [0m=====================================================================================================================
echo [32mInstalling Xbox Game Bar....[0m
echo =====================================================================================================================
cls
cd "%USERPROFILE%\Downloads"
cls
Powershell Add-AppxPackage -Path Microsoft.UI.Xaml.2.7_7.2208.15002.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00_14.0.33519.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.XboxGamingOverlay_7.124.7102.0_neutral_~_8wekyb3d8bbwe.AppxBundle
cls
net start BcastDVRUserService
cls
timeout /t 5 >nul
goto menu

:gamebar2
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "remove-xboxgamebar.ps1" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/remove-xboxgamebar.ps1"  
cls
powershell -ExecutionPolicy Bypass -File "remove-xboxgamebar.ps1"
cls
del /q /s remove-xboxgamebar.ps1 >nul 2>nul
cls
Reg add "HKCU\System\GameConfigStore" /v "GameDVR_Enabled" /t REG_DWORD /d "0" /f >nul
net stop BcastDVRUserService
cls
timeout /t 5 >nul
goto menu

:gamebar3
Reg add "HKCU\System\GameConfigStore" /v "GameDVR_Enabled" /t REG_DWORD /d "1" /f >nul
Reg add "HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\GameDVR" /v "AppCaptureEnabled" /t REG_DWORD /d "1" /f >nul
start ms-settings:gaming-gamebar
cls
timeout /t 5 >nul
goto op11

:netframework
cls
echo [0m=====================================================================================================================
echo [32mMicrosoft .NET Framework 2.x/3.x/4.x[0m                   
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Force to use .NET Framework 3/2 (Disable force .NetFramework 4.x)
echo [32m[2][0m ^| Force to use Latest .Net Framework 4.x (Enable force .NetFramework 4.x)                                       
echo [0m=====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto netframework1
if "%op%"=="2" goto netframework2
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 2.[0m
timeout /t 2 >nul
cls
goto netframework


:netframework1
REG ADD "HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\.NETFramework" /v "OnlyUseLatestCLR" /t REG_DWORD /d 0 /f >nul 2>nul
REG ADD "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework" /v "OnlyUseLatestCLR" /t REG_DWORD /d 0 /f >nul 2>nul
cls
echo [0m=====================================================================================================================
echo [31mForced to use .NET Framework 3/2![0m
echo [0m=====================================================================================================================
timeout /t 3 >nul
cls
goto netframework

:netframework2
REG ADD "HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\.NETFramework" /v "OnlyUseLatestCLR" /t REG_DWORD /d 1 /f
REG ADD "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\.NETFramework" /v "OnlyUseLatestCLR" /t REG_DWORD /d 1 /f
cls
echo [0m=====================================================================================================================
echo [31mForced to use Latest .NET Framework 4.x![0m
echo [0m=====================================================================================================================
timeout /t 3 >nul
cls
goto netframework

:onedrive0
cls
echo [0m=====================================================================================================================
echo [32mMicrosoft OneDrive[0m                                       
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| ^| Download and Install                                                                         
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu 
echo.

set /p op=Type option:
if "%op%"=="1" goto onedrive1
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 1.[0m
timeout /t 2 >nul
cls
goto onedrive0

:onedrive1
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "OneDriveSetup.exe" "https://oneclient.sfx.ms/Win/Prod/19.174.0902.0013/OneDriveSetup.exe" 
Reg Add "HKLM\SOFTWARE\Policies\Microsoft\Windows\OneDrive" /v "DisableFileSyncNGSC" /t REG_DWORD /d 0 /f
cls
call OneDriveSetup.exe "/silent /install"
cls
goto menu

:zunemusic
cls
echo [0m=====================================================================================================================
echo [32mMicrosoft Music[0m                               
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Download and Install                                                                        
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu  
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto startdownload2
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 1.[0m
timeout /t 2 >nul
cls
goto zunemusic

:startdownload2
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "Microsoft.ZuneMusic_11.2406.13.0_neutral_~_8wekyb3d8bbwe.Msixbundle" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.ZuneMusic_11.2406.13.0_neutral_~_8wekyb3d8bbwe.Msixbundle"
curl -L -o "Microsoft.UI.Xaml.2.8_8.2310.30001.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.UI.Xaml.2.8_8.2310.30001.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.UI.Xaml.2.8_8.2310.30001.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.UI.Xaml.2.8_8.2310.30001.0_x64__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/blob/main/Appx/Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x64__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.NET.Native.Framework.2.2_2.2.29512.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.NET.Native.Framework.2.2_2.2.29512.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.NET.Native.Framework.2.2_2.2.29512.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.NET.Native.Framework.2.2_2.2.29512.0_x64__8wekyb3d8bbwe.Appx"
timeout /t 8 >nul
cls
goto zunecheckxinstall

:zunecheckxinstall
cls
if "%PROCESSOR_ARCHITECTURE%"=="AMD64" goto zunemusic2020x64
if "%PROCESSOR_ARCHITECTURE%"=="x86" goto zunemusic2020x86

:zunemusic2020x64
cls
echo [0m=====================================================================================================================
echo [32mInstalling Microsoft Music....[0m
echo =====================================================================================================================
cls
cd "%USERPROFILE%\Downloads"
cls
Powershell Add-AppxPackage -Path Microsoft.UI.Xaml.2.8_8.2310.30001.0_x64__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.UI.Xaml.2.8_8.2310.30001.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x64__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.NET.Native.Framework.2.2_2.2.29512.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.NET.Native.Framework.2.2_2.2.29512.0_x64__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.ZuneMusic_11.2406.13.0_neutral_~_8wekyb3d8bbwe.Msixbundle
cls
timeout /t 5 >nul
goto menu

:zunemusic2020x86
cls
echo [0m=====================================================================================================================
echo [32mInstalling Microsoft Music....[0m
echo =====================================================================================================================
cls
cd "%USERPROFILE%\Downloads"
cls
Powershell Add-AppxPackage -Path Microsoft.UI.Xaml.2.8_8.2310.30001.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.NET.Native.Runtime.2.2_2.2.28604.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.NET.Native.Framework.2.2_2.2.29512.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.ZuneMusic_11.2406.13.0_neutral_~_8wekyb3d8bbwe.Msixbundle
cls
timeout /t 5 >nul
goto menu

:movie
cls
echo [0m=====================================================================================================================
echo [32mMicrosoft Movies ^& TV[0m                               
echo ---------------------------------------------------------------------------------------------------------------------
echo Download Microsoft Movies ^& TV from Microsoft Store                                                                    
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu  
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto startdownload3
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 1.[0m
timeout /t 2 >nul
cls
goto zunemusic

:startdownload3
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "Microsoft.ZuneVideo_2019.24061.10086.0_neutral_~_8wekyb3d8bbwe.AppxBundle" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.ZuneVideo_2019.24061.10086.0_neutral_~_8wekyb3d8bbwe.AppxBundle"
curl -L -o "Microsoft.UI.Xaml.2.8_8.2310.30001.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.UI.Xaml.2.8_8.2310.30001.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.UI.Xaml.2.8_8.2310.30001.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.UI.Xaml.2.8_8.2310.30001.0_x64__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.VCLibs.140.00_14.0.33519.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00_14.0.33519.0_x64__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.VCLibs.140.00_14.0.33519.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00_14.0.33519.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x86__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x86__8wekyb3d8bbwe.Appx"
curl -L -o "Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x64__8wekyb3d8bbwe.Appx" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/Appx/Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x64__8wekyb3d8bbwe.Appx"
timeout /t 8 >nul
cls
goto movieinstall

:movieinstall
cls
if "%PROCESSOR_ARCHITECTURE%"=="AMD64" goto moviex64
if "%PROCESSOR_ARCHITECTURE%"=="x86" goto moviex86

:moviex64
cls
echo [0m=====================================================================================================================
echo [32mInstalling Movies ^& TV....[0m
echo =====================================================================================================================
cls
cd "%USERPROFILE%\Downloads"
cls
Powershell Add-AppxPackage -Path Microsoft.UI.Xaml.2.8_8.2310.30001.0_x64__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.UI.Xaml.2.8_8.2310.30001.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00_14.0.33519.0_x64__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00_14.0.33519.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x64__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.ZuneVideo_2019.24061.10086.0_neutral_~_8wekyb3d8bbwe.AppxBundle
cls
timeout /t 5 >nul
goto menu

:moviex86
cls
echo [0m=====================================================================================================================
echo [32mInstalling Movies ^& TV....[0m
echo =====================================================================================================================
cls
cd "%USERPROFILE%\Downloads"
cls
Powershell Add-AppxPackage -Path Microsoft.UI.Xaml.2.8_8.2310.30001.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00_14.0.33519.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.VCLibs.140.00.UWPDesktop_14.0.33728.0_x86__8wekyb3d8bbwe.Appx
cls
Powershell Add-AppxPackage -Path Microsoft.ZuneVideo_2019.24061.10086.0_neutral_~_8wekyb3d8bbwe.AppxBundle
cls
timeout /t 5 >nul
goto menu

:opwin11
cls
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="22000" goto forwindows11
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="22610" goto forwindows11
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="22621" goto forwindows11
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="22631" goto forwindows11
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="26100" goto forwindows11
cls

:recheck
FOR /F "tokens=1*" %%A IN ('wmic os get caption ^| find /i "Windows 11"') do goto nowin11 && goto yeswin11

:yeswin11
cls
echo [31mWindows 11 only[0m && timeout /t 4 >nul && goto menu

:nowin11
cls
goto forwindows11

:forwindows11
cls
echo [0m=====================================================================================================================
echo [32mOptions for Windows 11[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Restore Old/New Right click Context Menu
echo [32m[2][0m ^| Right click startmenu ^| Powershell ^| CMD
echo [32m[3][0m ^| Custom Patcher Taskbar/Explorer for Windows 11
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu[0m
echo.


timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto win1101
::if "%op%"=="2" goto win1107
if "%op%"=="2" goto win1108
if "%op%"=="3" goto win1112
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 4.[0m
timeout /t 2 >nul
cls
goto :opwin11

:win1101
cls
echo [0m=====================================================================================================================
echo [32mRestore Old/New Right click Context Menu[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Restore Old Right click Context Menu
echo [32m[2][0m ^| Restore New Right click Context Menu
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto win11context01
if "%op%"=="2" goto win11context02
if "%op%"=="0" goto forwindows11

cls
echo [31mInvalid option. Please select a number between 0 and 2.[0m
timeout /t 2 >nul
cls
goto :win1101

:win11context01
cls
reg.exe add "HKCU\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}\InprocServer32" /f /ve 2>nul >nul
taskkill /F /IM explorer.exe >nul 2>nul
timeout /t 2 >nul
start explorer
goto win1101

:win11context02
cls
reg.exe delete "HKCU\Software\Classes\CLSID\{86ca1aa0-34aa-4e8b-a509-50c905bae2a2}" /f 2>nul >nul
taskkill /F /IM explorer.exe >nul 2>nul
timeout /t 2 >nul
start explorer
goto win1101

:win1107
cls
echo [0m=====================================================================================================================
echo [32mExplorer Ribbon Old/Modern[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Restore Old Explorer Ribbon
echo [32m[2][0m ^| Restore New Explorer Ribbon
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto win11ribbon01
if "%op%"=="2" goto win11ribbon02
if "%op%"=="0" goto forwindows11

cls
echo [31mInvalid option. Please select a number between 0 and 2.[0m
timeout /t 2 >nul
cls
goto :win1107

:win11ribbon01
cls
reg.exe add "HKCU\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}\InprocServer32" /f /ve 2>nul >nul
taskkill /F /IM explorer.exe >nul 2>nul
timeout /t 2 >nul
start explorer
cls
goto win1107

:win11ribbon02
cls
reg.exe delete "HKCU\Software\Classes\CLSID\{d93ed569-3b3e-4bff-8355-3c44f6a52bb5}" /f 2>nul >nul
taskkill /F /IM explorer.exe >nul 2>nul
timeout /t 2 >nul
start explorer
cls
goto win1107

:win1108
cls
echo [0m=====================================================================================================================
echo [32mRight click startmenu ^| Powershell ^| CMD[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32mPowershell (Admin)[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Enable
echo [32m[2][0m ^| Disable
echo ---------------------------------------------------------------------------------------------------------------------
echo [32mCMD (Admin)[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[3][0m ^| Enable
echo [32m[4][0m ^| Disable
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto win11o3
if "%op%"=="2" goto win11o4
if "%op%"=="3" goto win11o5
if "%op%"=="4" goto win11o6
if "%op%"=="0" goto forwindows11

cls
echo [31mInvalid option. Please select a number between 0 and 4.[0m
timeout /t 2 >nul
cls
goto :win1108

:win11o3
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "Add_PowerShell.reg" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/Add_PowerShell.reg"
regedit /s "Add_PowerShell.reg" 
cls
goto win1108

:win11o4
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "Remove_PowerShell.reg" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/Remove_PowerShell.reg"
regedit /s "Remove_PowerShell.reg" 
cls
goto win1108

:win11o5
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "Add_CMD.reg" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/Add_CMD.reg"
regedit /s "Add_CMD.reg"  
goto win1108

:win11o6
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "Remove_CMD.reg" "https://raw.githubusercontent.com/MatiDEV-PL/Open-ToolBox/main/Remove_CMD.reg"
regedit /s "Remove_CMD.reg"  
goto win1108

:win1112
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="22610" cls && echo Not Support for Windows 11 22H2 Version. && timeout /t 5 >nul && goto forwindows11
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="22621" cls && echo Not Support for Windows 11 22H2 Version. && timeout /t 5 >nul && goto forwindows11
cls
echo [0m=====================================================================================================================
echo [32mExplorer Patcher for Windows 11[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Download Explorer Patcher
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[2][0m ^| Download WebView2 (required to use Weather on Taskbar)
echo ---------------------------------------------------------------------------------------------------------------------
echo [31mNOTE: To use Explorer Patcher ^| Right Click on Taskbar ^|  Properties ^| for Options.[0m
echo [31mNOTE: Please re-install again if explorer not showing.[0m
echo [31mNOTE: Weather on taskbar is now support on latest version. (WebView2 is required)[0m
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back
echo.


timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto win11taskbar3
if "%op%"=="2" goto widgetswin1103
if "%op%"=="0" goto forwindows11

cls
echo [31mInvalid option. Please select a number between 0 and 2.[0m
timeout /t 2 >nul
cls
goto :win1112

:win11taskbar3
cd "%USERPROFILE%\Downloads"
curl -L -o "random.exe" "https://github.com/valinet/ExplorerPatcher/releases/latest/download/ep_setup.exe"
cls
goto win11intaskbarXX

:win11intaskbarXX
cls
cd "%USERPROFILE%\Downloads"
echo [0m=====================================================================================================================
echo [32mInstalling..[0m
echo =====================================================================================================================
random.exe >nul
cls
echo [0m=====================================================================================================================
echo [32mInstalling....[0m
echo [0m=====================================================================================================================
Reg add "HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "TaskbarAl" /t REG_DWORD /d "0" /f >nul
goto :win1112

:widgetswin1103
cls
if "%arch%"=="64" (
    curl -L -o "%downloadDir%\MicrosoftEdgeWebview2Setup-x64.exe" "https://go.microsoft.com/fwlink/?linkid=2124701"
    cd "%downloadDir%"
    MicrosoftEdgeWebview2Setup-x64.exe
) else (
    curl -L -o "%downloadDir%\MicrosoftEdgeWebview2Setup-x86.exe" "https://go.microsoft.com/fwlink/?linkid=2099617"
    cd "%downloadDir%"
    icrosoftEdgeWebview2Setup-x86.exe
)
timeout /t 1 >nul
cls
goto :win1112

:op16
cls
echo [0m=====================================================================================================================
echo [32mVisual C++ Redistributables AIO x86 x64[0m                
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Microsoft Visual C++ 2002-2003-2005-2008-2010-2012-2013-2022 (AIO)
echo [32m[2][0m ^| Microsoft Visual C++ 2015-2017-2019 [33m14.29.30133.0[0m [31mx64-x86[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [31mNOTE: If of some software cannot be install or running please try Option 2.[0m
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu 
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto vi1
if "%op%"=="2" goto vi2
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 2.[0m
timeout /t 2 >nul
cls
goto op16

:vi2
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "vc_redist.x64.exe" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/vc_redist.x64.exe" 
curl -L -o "vc_redist.x86.exe" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/vc_redist.x86.exe" 
cls

:installvi2
cls
if "%PROCESSOR_ARCHITECTURE%"=="AMD64" goto vi2x64
if "%PROCESSOR_ARCHITECTURE%"=="x86" goto vi2x32
cls

:vi2x64
cd "%USERPROFILE%\Downloads"
echo [0m=====================================================================================================================
echo [32mInstalling....[0m
echo [0m=====================================================================================================================
timeout /t 2 >nul
vc_redist.x64.exe >nul
cls
goto menu

:vi2x32
cd "%USERPROFILE%\Downloads"
echo [0m=====================================================================================================================
echo [32mInstalling....[0m
echo [0m=====================================================================================================================
timeout /t 2 >nul
vc_redist.x86.exe >nul
cls
goto menu

:vi1
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "VisualCppRedist_AIO_x86_x64.exe" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/VisualCppRedist_AIO_x86_x64.exe"
cls
echo [0m=====================================================================================================================
echo [32mInstalling....[0m
echo [0m=====================================================================================================================
VisualCppRedist_AIO_x86_x64.exe >nul
cls 
goto menu

:op17
cls
echo [0m=====================================================================================================================
echo [32mDirectX Runtime Web Installer[0m                            
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Online Installer      
echo [32m[2][0m ^| Offline Installer                                                                     
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu  
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto dx1
if "%op%"=="2" goto dxoffline
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a number between 0 and 2.[0m
timeout /t 2 >nul
cls
goto op17

:dx1
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "dxwebsetup.exe" "https://download.microsoft.com/download/1/7/1/1718CCC4-6315-4D8E-9543-8E28A4E18C4C/dxwebsetup.exe"
cls
echo [0m=====================================================================================================================
echo [32mInstalling....[0m
echo [0m=====================================================================================================================
dxwebsetup.exe >nul
cls
timeout /t 1 >nul
goto menu

:dxoffline
cls
cd "%USERPROFILE%\Downloads"
curl -L -o "7z1900-extra.zip" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/7z1900-extra.zip"
curl -L -o "directX_offline.exe" "https://github.com/MatiDEV-PL/Open-ToolBox/raw/main/directx_Jun2010_redist.exe" 
timeout /t 5 >nul
cls
powershell -command "Expand-Archive 7z1900-extra.zip"
7z1900-extra\7za x directX_offline.exe -aoa -o"directX_offline" >nul
cd "directX_offline"
cls
echo [0m=====================================================================================================================
echo [32mInstalling....[0m
echo [0m=====================================================================================================================
DXSETUP.exe >nul
timeout /t 1 >nul
cls
goto menu

:opdisk
cls
echo =====================================================================================================================
echo [32mMicrosoft Disk Benchmark Test (Write/Read) [0m              
echo ---------------------------------------------------------------------------------------------------------------------
echo Type[0m [33mC[0m, [33mD[0m, [33mE[0m, to [33mZ[0m that you want to test[0m             
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu  
echo.

timeout /t 1 >nul
set /p op=Benchmark Drive : 
if "%op%"=="C" goto diskc
if "%op%"=="c" goto diskc
if "%op%"=="D" goto diskd
if "%op%"=="d" goto diskd
if "%op%"=="E" goto diske
if "%op%"=="e" goto diske
if "%op%"=="F" goto diskf
if "%op%"=="f" goto diskf
if "%op%"=="G" goto diskg
if "%op%"=="g" goto diskg
if "%op%"=="H" goto diskh
if "%op%"=="h" goto diskh
if "%op%"=="I" goto diski
if "%op%"=="i" goto diski
if "%op%"=="J" goto diskj
if "%op%"=="j" goto diskj
if "%op%"=="K" goto diskk
if "%op%"=="k" goto diskk
if "%op%"=="L" goto diskl
if "%op%"=="l" goto diskl
if "%op%"=="M" goto diskm
if "%op%"=="m" goto diskm
if "%op%"=="N" goto diskn
if "%op%"=="n" goto diskn
if "%op%"=="O" goto disko
if "%op%"=="o" goto disko
if "%op%"=="P" goto diskp
if "%op%"=="p" goto diskp
if "%op%"=="Q" goto diskq
if "%op%"=="q" goto diskq
if "%op%"=="R" goto diskr
if "%op%"=="r" goto diskr
if "%op%"=="S" goto disks
if "%op%"=="s" goto disks
if "%op%"=="T" goto diskt
if "%op%"=="t" goto diskt
if "%op%"=="U" goto disku
if "%op%"=="u" goto disku
if "%op%"=="V" goto diskv
if "%op%"=="v" goto diskv
if "%op%"=="W" goto diskw
if "%op%"=="w" goto diskw
if "%op%"=="X" goto diskx
if "%op%"=="x" goto diskx
if "%op%"=="Y" goto disky
if "%op%"=="y" goto disky
if "%op%"=="Z" goto diskz
if "%op%"=="z" goto diskz
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a letter between C and Z.[0m
timeout /t 2 >nul
cls
goto opdisk

:diskc
cls
echo BENCHMARK DRIVE [33mC[0m:
echo =====================================================================================================================
winsat disk -drive C
echo =====================================================================================================================
pause
goto opdisk

:diskd
cls
echo BENCHMARK DRIVE [33mD[0m:
echo =====================================================================================================================
powershell winsat disk -drive D
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diske
cls
echo BENCHMARK DRIVE [33mE[0m:
echo =====================================================================================================================
winsat disk -drive E
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskf
cls
echo BENCHMARK DRIVE [33mF[0m:
echo =====================================================================================================================
winsat disk -drive F
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskg
cls
echo BENCHMARK DRIVE [33mG[0m:
echo =====================================================================================================================
winsat disk -drive G
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskh
cls
echo BENCHMARK DRIVE [33mH[0m:
echo =====================================================================================================================
winsat disk -drive H
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diski
cls
echo BENCHMARK DRIVE [33mI[0m:
echo =====================================================================================================================
winsat disk -drive I
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskj
cls
echo BENCHMARK DRIVE [33mJ[0m:
echo =====================================================================================================================
winsat disk -drive J
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskk
cls
echo BENCHMARK DRIVE [33mK[0m:
echo =====================================================================================================================
winsat disk -drive K
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskl
cls
echo BENCHMARK DRIVE [33mL[0m:
echo =====================================================================================================================
winsat disk -drive L
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskm
cls
echo BENCHMARK DRIVE [33mM[0m:
echo =====================================================================================================================
winsat disk -drive M
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskn
cls
echo BENCHMARK DRIVE [33mN[0m:
echo =====================================================================================================================
winsat disk -drive N
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:disko
cls
echo BENCHMARK DRIVE [33mO[0m:
echo =====================================================================================================================
winsat disk -drive O
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskp
cls
echo BENCHMARK DRIVE [33mP[0m:
echo =====================================================================================================================
winsat disk -drive P
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskq
cls
echo BENCHMARK DRIVE [33mQ[0m:
echo =====================================================================================================================
winsat disk -drive Q
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskr
cls
echo BENCHMARK DRIVE [33mR[0m:
echo =====================================================================================================================
winsat disk -drive R
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:disks
cls
echo BENCHMARK DRIVE [33mS[0m:
echo =====================================================================================================================
winsat disk -drive S
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskt
cls
echo BENCHMARK DRIVE [33mT[0m:
echo =====================================================================================================================
winsat disk -drive T
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:disku
cls
echo BENCHMARK DRIVE [33mU[0m:
echo =====================================================================================================================
winsat disk -drive U
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskv
cls
echo BENCHMARK DRIVE [33mV[0m:
echo =====================================================================================================================
winsat disk -drive V
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskw
cls
echo BENCHMARK DRIVE [33mW[0m:
echo =====================================================================================================================
winsat disk -drive W
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskx
cls
echo BENCHMARK DRIVE [33mX[0m:
echo =====================================================================================================================
winsat disk -drive X
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:disky
cls
echo BENCHMARK DRIVE [33mY[0m:
echo =====================================================================================================================
winsat disk -drive Y
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:diskz
cls
echo BENCHMARK DRIVE [33mZ[0m:
echo =====================================================================================================================
winsat disk -drive Z
timeout /t 1 >nul
echo =====================================================================================================================
pause
goto opdisk

:pers
cls
echo =====================================================================================================================
echo [32mPersonalization[0m                                                           
echo ---------------------------------------------------------------------------------------------------------------------
echo [32mExplorer UI Ribbon[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Enable Explorer UI Ribbon                        
echo [32m[2][0m ^| Disable Explorer UI Ribbon
echo ---------------------------------------------------------------------------------------------------------------------         
echo [31mNOTE: Do not disable Ribbon if your software Use Ribbon ex. (Office/Paint/etc etc)[0m         
echo ---------------------------------------------------------------------------------------------------------------------
echo [32mTransparency Taskbar[0m
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[3][0m ^| Enable Transparency Taskbar                      
echo [32m[4][0m ^| Disable Transparency Taskbar                                                           
echo =====================================================================================================================
echo.
echo [32m[0][0m ^| Back to menu
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto pers1
if "%op%"=="2" goto pers2
if "%op%"=="3" goto pers3
if "%op%"=="4" goto pers4
if "%op%"=="0" goto menu

cls
echo [31mInvalid option. Please select a letter between 0 and 4.[0m
timeout /t 2 >nul
cls
goto pers

:pers1
cls
takeown /F "%systemdrive%\Windows\System32\UIRibbon.dll"
takeown /F "%systemdrive%\Windows\System32\*UIRibbon*"
ICACLS "%systemdrive%\Windows\System32\*UIRibbon*" /grant administrators:F
cls
ren %systemdrive%\Windows\System32\UIRibbon.dll.bak UIRibbon.dll
cls
taskkill /F /IM explorer.exe
start explorer
cls
echo [0m=====================================================================================================================
echo [32mExplorer UI Ribbon is Enable!
echo [0m=====================================================================================================================
timeout /t 2 >nul
cls
goto pers

:pers2
cls
takeown /F "%systemdrive%\Windows\System32\UIRibbon.dll"
takeown /F "%systemdrive%\Windows\System32\*UIRibbon*"
ICACLS "%systemdrive%\Windows\System32\*UIRibbon*" /grant administrators:F
cls
ren %systemdrive%\Windows\System32\UIRibbon.dll UIRibbon.dll.bak
cls
taskkill /F /IM explorer.exe
start explorer
cls
echo [0m=====================================================================================================================
echo [32mExplorer UI Ribbon is Disable![0m
echo [0m=====================================================================================================================
timeout /t 2 >nul
cls
goto pers

:pers3
cls
REG ADD "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "UseOLEDTaskbarTransparency" /t REG_DWORD /d "1" /f
REG ADD "HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v "EnableTransparency" /t REG_DWORD /d "1" /f
cls
taskkill /F /IM explorer.exe
start explorer
cls
echo [0m=====================================================================================================================
echo [32Transparent Taskbar is Enable![0m
echo [0m=====================================================================================================================
timeout /t 2 >nul
cls
goto pers

:pers4
cls
REG ADD "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Advanced" /v "UseOLEDTaskbarTransparency" /t REG_DWORD /d "0" /f
REG ADD "HKCU\Software\Microsoft\Windows\CurrentVersion\Themes\Personalize" /v "EnableTransparency" /t REG_DWORD /d "0" /f
cls
taskkill /F /IM explorer.exe
start explorer
cls
echo [0m=====================================================================================================================
echo [32Transparent Taskbar is Disable![0m
echo [0m=====================================================================================================================
timeout /t 2 >nul
cls
goto pers

:gameclient
cls
echo =====================================================================================================================
echo [32mGame Client[0m                               
echo ---------------------------------------------------------------------------------------------------------------------
echo [32m[1][0m ^| Steam          
echo [32m[2][0m ^| Origin         
echo [32m[3][0m ^| Ubisoft Connect
echo [32m[4][0m ^| GOG GALAXY 2.0 
echo [32m[5][0m ^| Epic Games     
echo [32m[6][0m ^| Battle.net     
echo [32m[7][0m ^| itch.io        
echo [32m[8][0m ^| Bethesda Net   
echo [32m[9][0m ^| EA App         
echo [32m[10][0m ^| Xbox App [31m(For Windows 10 20H2/21H1 or higher)
echo [32m[11][0m ^| Rockstar Games Launcher      
echo [32m[12][0m ^| Amazon Games App   
echo ---------------------------------------------------------------------------------------------------------------------
echo [31mNOTE: Please install[0m [33m"Visual C++ Redistributables AIO"[31m before Installing game clients.[0m
echo [31mNOTE: Required Internet for download.[0m                                                         
echo =====================================================================================================================
echo.
echo [0] %White%Back to menu
echo.

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto gameclient1
if "%op%"=="2" goto gameclient2
if "%op%"=="3" goto gameclient3
if "%op%"=="4" goto gameclient4
if "%op%"=="5" goto gameclient5
if "%op%"=="6" goto gameclient6
if "%op%"=="7" goto gameclient7
if "%op%"=="8" goto gameclient8
if "%op%"=="9" goto gameclient9
if "%op%"=="10" goto gameclient10xbox
if "%op%"=="11" goto gameclient11
if "%op%"=="12" goto gameclient12
if "%op%"=="0" goto menu

cls
echo Wrong numbers please try again...
timeout /t 2 >nul
cls
goto gameclient

:gameclient10xbox
cls
for /f "tokens=2*" %%a in ('reg query "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion" /v CurrentBuild') do set "var=%%b" >nul
if "%var%"=="22000" goto winxboxappnope
cls
echo =====================================================================================================================
echo Xbox App For Windows 10 20H2/21H1 or higher version.
echo ---------------------------------------------------------------------------------------------------------------------
echo (NOTE: Please install Microsoft Store before install Xbox App, To install Microsoft Store go to Option 10 > 1)
echo (NOTE: If Dependencies is missing goto Xbox App > Settings > General > Dependencies > Install)
echo (NOTE: Some Game Xbox App Cannot be works on Administrator Account, please using Xbox App on non-Administrator User)
echo (NOTE: To using Latest Xbox App OS Build 1904x.1055 or Higher OS Build is required)
echo ---------------------------------------------------------------------------------------------------------------------
echo [1] ^| Xbox App
echo [0] ^| Back          
echo =====================================================================================================================

timeout /t 1 >nul
set /p op=Type option:
if "%op%"=="1" goto gameclient10
if "%op%"=="0" goto gameclient

cls
echo Wrong numbers please try again...
timeout /t 2 >nul
cls
goto gameclient

:winxboxappnope
cls
echo For Windows 11 user, Xbox app cannot be running on Administrator account,
echo please use Xbox app on non-administrator user.
echo.
echo For Windows 11 user, Please download xbox app from Microsoft store.
timeout /t 15 >nul
goto menu

:gameclient1
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "SteamSetup.exe" "https://steamcdn-a.akamaihd.net/client/installer/SteamSetup.exe" 
timeout /t 5 >nul
cls
echo Installing... please wait..
SteamSetup.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient2
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "OriginThinSetup.exe" "https://origin-a.akamaihd.net/Origin-Client-Download/origin/live/OriginThinSetup.exe" 
timeout /t 5 >nul
cls
echo Installing... please wait..
OriginThinSetup.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient3
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "UbisoftConnectInstaller.exe" "https://ubistatic3-a.akamaihd.net/orbit/launcher_installer/UbisoftConnectInstaller.exe" 
cls
echo Installing... please wait..
UbisoftConnectInstaller.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient4
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "GOG_Galaxy_2.0.exe" "https://webinstallers.gog-statics.com/download/GOG_Galaxy_2.0.exe" 
cls
echo Installing... please wait..
GOG_Galaxy_2.0.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient5
cls
cd "%USERPROFILE%\Downloads"
cls
curl "EpicInstaller-10.19.2.msi" "https://launcher-public-service-prod06.ol.epicgames.com/launcher/api/installer/download/EpicGamesLauncherInstaller.msi"
cls
echo Installing... please wait..
EpicInstaller-10.19.2.msi
timeout /t 3 >nul
cls
goto gameclient

:gameclient6
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "Battle.net-Setup.exe" "https://blizz.ly/3hzFDqN" 
cls
echo Installing... please wait..
Battle.net-Setup.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient7
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "itch-setup.exe" "https://itch.io/app/download"
cls
echo Installing... please wait..
itch-setup.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient8
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "BethesdaNetLauncher_Setup.exe" "https://download.cdp.bethesda.net/BethesdaNetLauncher_Setup.exe" 
cls
echo Installing... please wait..
BethesdaNetLauncher_Setup.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient9
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "EADesktopInstaller.exe" "https://origin-a.akamaihd.net/EA-Desktop-Client-Download/installer-releases/EADesktopInstaller.exe" 
cls
echo Installing... please wait..
EADesktopInstaller.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient10
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "XboxInstaller.exe" "https://assets.xbox.com/installer/20190628.8/anycpu/XboxInstaller.exe"
cls
echo Installing... please wait..
start XboxInstaller.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient11
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "Rockstar-Games-Launcher.exe" "https://gamedownloads.rockstargames.com/public/installer/Rockstar-Games-Launcher.exe" 
cls
echo Installing... please wait..
Rockstar-Games-Launcher.exe
timeout /t 3 >nul
cls
goto gameclient

:gameclient12
cls
cd "%USERPROFILE%\Downloads"
cls
curl -L -o "AmazonGamesSetup.exe" "https://download.amazongames.com/AmazonGamesSetup.exe" 
cls
echo Installing... please wait..
AmazonGamesSetup.exe
timeout /t 3 >nul
cls
goto gameclient

:vlc
cls
@echo off
echo  =====================================================================================================================
echo  [32mInstalling VLC...[0m
echo  =====================================================================================================================
timeout /t 1 >nul
if "%PROCESSOR_ARCHITECTURE%"=="AMD64" goto vlc64
if "%PROCESSOR_ARCHITECTURE%"=="x86" goto vlc32

:vlc64
cls
curl -L -o "%downloadDir%\7z-x64.exe" "https://7-zip.org/a/7z2407-x64.exe"
cls
echo =====================================================================================================================
echo [32mInstalling VLC x64...[0m
echo =====================================================================================================================
start /wait "" "%downloadDir%\VLC-x64.exe" /S
timeout /t 2 >nul
cls
goto menu

:vlc32
cls
curl -L -o "%downloadDir%\VLC-x86.exe" "https://get.videolan.org/vlc/3.0.21/win32/vlc-3.0.21-win32.exe"
cls
echo =====================================================================================================================
echo [32mInstalling VLC x86...[0m
echo =====================================================================================================================
start /wait "" "%downloadDir%\VLC-x86.exe" /S
timeout /t 2 >nul
cls
goto menu

:end
echo Done.
pause]]>
  </File>
  </Extensions>
</unattend>
